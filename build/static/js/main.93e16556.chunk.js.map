{"version":3,"sources":["definitions_and_words.ts","grammars/vocabGrammar.ts","Pictures_game/Background.jpg","Pictures_game/cat.jpg","Pictures_game/dog.jpeg","Pictures_game/fox.jpg","Pictures_game/sheep.jpg","Pictures_game/giraffe.jpeg","Pictures_game/crocodile.jpg","Pictures_game/peacock.jpg","Pictures_game/Monday.jpg","Pictures_game/Tuesday.jpg","Pictures_game/Wednesday.jpeg","Pictures_game/Thursday.jpg","Pictures_game/Friday.jpg","Pictures_game/Saturday.jpg","Pictures_game/Sunday.jpg","Pictures_game/Teacher.jpeg","Pictures_game/Doctor.png","Pictures_game/Builder.jpg","Pictures_game/Lifeguard.jpg","Pictures_game/Actor.jpg","Pictures_game/Engineer.png","Pictures_game/Garbage_man.jpeg","Pictures_game/yellow.jpg","Pictures_game/red.jpg","Pictures_game/purple.png","Pictures_game/brown.jpg","Pictures_game/black.jpg","Pictures_game/white.jpg","Pictures_game/green.jpg","Pictures_game/go.png","Pictures_game/run.jpg","Pictures_game/eat.jpg","Pictures_game/sleep.jpg","Pictures_game/write.jpg","Pictures_game/sing.jpg","Pictures_game/drink.jpg","Pictures_game/cousin.jpg","Pictures_game/brother.jpeg","Pictures_game/sister.jpg","Pictures_game/mother.jpg","Pictures_game/dad.jpg","Pictures_game/grandma_1.jpg","Pictures_game/grandma_2.jpg","Pictures_game/river.png","Pictures_game/mountain.jpg","Pictures_game/sea.jpg","Pictures_game/forest.jpg","Pictures_game/lake.jpg","Pictures_game/cliff.jpg","Pictures_game/cave.jpg","dmSwenglish.ts","index.tsx"],"names":["game_vocab","cat","english","swedish","article","sv","definition","clue","dog","fox","sheep","giraffe","crocodile","peacock","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","teacher","doctor","builder","lifeguard","actor","engineer","garbage_man","yellow","red","purple","brown","black","white","green","go","run","eat","sleep","write","sing","drink","cousin","brother","sister","mum","dad","grandma_1","grandma_2","river","mountain","sea","forest","lake","cliff","cave","animalsGrammar","en_cat","en_dog","en_fox","ett_sheep","en_giraffe","en_crocodile","en_peacock","weekdaysGrammar","gameGrammar","start","quit","skip","repeat","change_game","occupationsGrammar","en_teacher","en_doctor","en_builder","en_lifeguard","en_actor","en_engineer","en_garbage_man","coloursGrammar","verbsGrammar","familyGrammar","en_cousin","en_brother","en_sister","en_mum","en_dad","en_grandma_1","en_grandma_2","geographicalGrammar","en_river","ett_mountain","ett_sea","en_forest","en_lake","en_cliff","en_cave","promptReset","assign","context","count","scoreReset","score","say","text","send","_context","type","value","listen","cancel","actions","invoke_rasa","go_to_state","invoke","id","src","event","nluRequest","task","onDone","target","intentResult","data","intent","name","console","log","onError","sayAskTimeout","say_this","initial","states","prompt","entry","on","ENDSPEECH","ask","nomatch","timeout_final","idle","timeout","TIMEOUT","cond","reprompt0","reprompt1","reprompt2","Say_play","say_word","delay","almost","match","reprompt","go_to_next","skip_to_next","Show_play","show","fetch","Request","proxyurl","method","headers","body","then","json","dmMachine","start_point","CLICK","welcome","which_game","RECOGNISED","recResult","choice","tool","pick_game","general_help","wordplay","wordplay_invocation","wordplay_choice","game_category","wordplay_again","wordplay_help","wordplay_quit","wordplay_pregame","wordplay_animals_begin","NEXT_STATE","SKIP_STATE","wordplay_dog","wordplay_fox","wordplay_sheep","wordplay_giraffe","wordplay_crocodile","wordplay_peacock","wordplay_weekdays_begin","wordplay_tuesday","wordplay_wednesday","wordplay_thursday","wordplay_friday","wordplay_saturday","wordplay_sunday","wordplay_occupations_begin","wordplay_doctor","wordplay_builder","wordplay_lifeguard","wordplay_actor","wordplay_engineer","wordplay_garbage_man","wordplay_colours_begin","wordplay_red","wordplay_purple","wordplay_brown","wordplay_black","wordplay_white","wordplay_green","wordplay_verbs_begin","wordplay_run","wordplay_eat","wordplay_sleep","wordplay_write","wordplay_sing","wordplay_drink","wordplay_family_begin","wordplay_brother","wordplay_sister","wordplay_mum","wordplay_dad","wordplay_grandma_1","wordplay_grandma_2","wordplay_geographical_begin","wordplay_mountain","wordplay_sea","wordplay_forest","wordplay_lake","wordplay_cliff","wordplay_cave","wordplay_summary","definitions","definitions_invocation","definitions_choice","definitions_again","definitions_help","definitions_quit","definitions_pregame","definitions_animals_begin","definitions_dog","definitions_fox","definitions_sheep","definitions_giraffe","definitions_crocodile","definitions_peacock","definitions_weekdays_begin","definitions_tuesday","definitions_wednesday","definitions_thursday","definitions_friday","definitions_saturday","definitions_sunday","definitions_occupations_begin","definitions_doctor","definitions_builder","definitions_lifeguard","definitions_actor","definitions_engineer","definitions_garbage_man","definitions_colours_begin","definitions_red","definitions_purple","definitions_brown","definitions_black","definitions_white","definitions_green","definitions_verbs_begin","definitions_run","definitions_eat","definitions_sleep","definitions_write","definitions_sing","definitions_drink","definitions_family_begin","definitions_brother","definitions_sister","definitions_mum","definitions_dad","definitions_grandma_1","definitions_grandma_2","definitions_geographical_begin","definitions_mountain","definitions_sea","definitions_forest","definitions_lake","definitions_cliff","definitions_cave","definitions_summary","pictures","pictures_invocation","pictures_choice","pictures_again","pictures_help","pictures_quit","pictures_pregame","picture","pictures_animals_begin","Background","SHOW","pictures_dog","pictures_fox","pictures_sheep","pictures_giraffe","pictures_crocodile","pictures_peacock","pictures_weekdays_begin","pictures_tuesday","pictures_wednesday","pictures_thursday","pictures_friday","pictures_saturday","pictures_sunday","pictures_occupations_begin","pictures_doctor","pictures_builder","pictures_lifeguard","pictures_actor","pictures_engineer","pictures_garbage_man","pictures_colours_begin","pictures_red","pictures_purple","pictures_brown","pictures_black","pictures_white","pictures_green","pictures_verbs_begin","pictures_run","pictures_eat","pictures_sleep","pictures_write","pictures_sing","pictures_drink","pictures_family_begin","pictures_brother","pictures_sister","pictures_mum","pictures_dad","pictures_grandma_1","pictures_grandma_2","pictures_geographical_begin","pictures_mountain","pictures_sea","pictures_forest","pictures_lake","pictures_cliff","pictures_cave","pictures_summary","quit_game","exit_app","machine","Machine","dm","asrtts","LISTEN","SPEAK","ttsAgenda","recognising","exit","ASRRESULT","counterScore","counterTimeout","progress","speaking","recLogResult","test","logIntent","nluData","ReactiveButton","props","state","matches","className","style","animation","App","useSpeechSynthesis","onEnd","speak","useSpeechRecognition","onResult","result","stop","listening","useMachine","devTools","recStart","asEffect","interimResults","continuous","language","recStop","ttsStart","effect","ttsCancel","current","shown_picture","onClick","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.93e16556.chunk.js","sourcesContent":["export const game_vocab = {  \n    animals:{\n        cat:{english: 'cat', swedish: 'en katt', article: 'en', sv: 'katt', definition: 'a small animal with fur, usually kept as a pet or for catching mice', clue: 'has four legs, wields a tail and meows when necessary'},\n        dog:{english: 'dog',  swedish: 'en hund', article: 'en', sv: 'hund', definition: 'a domestic pet with four legs, kept by people as a pet or to guard things', clue: 'barks on you, licks your face and likes to sleep in your bed'},\n        fox:{english: 'fox',  swedish: 'en räv', article: 'en', sv: 'räv', definition: 'a wild animal with pointed ears and a reddish-brown fur', clue: 'has a wide tail and likes to hunt your chickens'},\n        sheep:{english: 'sheep',  swedish: 'en får', article: 'ett', sv: 'får', definition: 'a farm animal with thick wool', clue: 'eats grass and is herded by dogs'},\n        giraffe:{english: 'giraffe',  swedish: 'en giraff', article: 'en', sv: 'giraff', definition: 'a large African animal with very long neck', clue: 'is yellow in colour and has brown spots'},\n        crocodile:{english: 'crocodile',  swedish: 'en krokodil',article: 'en', sv: 'krokodil', definition: 'a large reptile with hard skin that lives near the rivers', clue: 'like an alligator, but has a longer nose'},\n        peacock:{english: 'peacock',  swedish: 'en påfågel',article: 'en', sv: 'påfågel', definition: 'a large bird, the male of which has a very long colourful tail feathers', clue: 'the pattern of the feathers is shaped like eyes'},\n    },\n    weekdays:{\n        Monday:{english: 'Monday', article: 'en', sv: 'måndag', definition: 'the day of the week after Sunday and before Tuesday', clue: 'first day of the week'},\n        Tuesday:{english: 'Tuesday', article: 'en', sv: 'tisdag', definition: 'the day of the week after Monday and before Wednesday', clue: 'second day of the week'},\n        Wednesday:{english: 'Wednesday', article: 'en', sv: 'onsdag', definition: 'the day of the week after Tuesday and before Thursday', clue: 'third day of the week'},\n        Thursday:{english: 'Thursday', article: 'en', sv: 'tirsdag', definition: 'the day of the week after Wednesday and before Friday', clue: 'fourth day of the week'},\n        Friday:{english: 'Friday', article: 'en', sv: 'fredag', definition: 'the day of the week after Thursday and before Saturday', clue: 'fifth day of the week'},\n        Saturday:{english: 'Saturday', article: 'en', sv: 'lördag', definition: 'the day of the week after Friday and before Sunday', clue: 'sixth day of the week'},\n        Sunday:{english: 'Sunday', article: 'en', sv: 'söndag', definition: 'the day of the week after Saturday and before Monday', clue: 'seventh day of the week'},\n    },\n    occupation:{\n        teacher:{english: 'teacher', article: 'en', sv: 'lärare', definition: 'someone whose job is to teach in a school or college', clue: 'a person who instructs or trains others on subjects like chemistry and biology, especially in a school'},\n        doctor:{english: 'doctor', article: 'en', sv: 'läkare', definition: 'a person with a medical degree whose job is to treat people who are ill or hurt', clue: 'they work in hospitals'},\n        builder:{english: 'builder', article: 'en', sv: 'byggare', definition: 'a person whose job it is to make buildings', clue: 'a cartoon character: Bob the...'},\n        lifeguard:{english: 'lifeguard', article: 'en', sv: 'badvakt', definition: 'a person on a beach or at a swimming pool whose job is to make certain that the swimmers are safe', clue: 'usually wears red swimsuits on duty'},\n        actor:{english: 'actor', article: 'en', sv: 'skådespelare', definition: 'someone who pretends to be someone else while performing', clue: 'works in films, plays, television or radio programmes'},\n        engineer:{english: 'enginerr', article: 'en', sv: 'ingengör', definition: 'a person whose job is to design or build machines, engines or other equipment', clue: 'occupation which requires physics, mathematics and IT knowledge'},\n        garbage_man:{english: 'garbage man', article: 'en', sv: 'sopgubbe', definition: \"a person whose job is to empty people's dustbins and take the rubbish away\", clue: 'they come with a garbage truck'},\n    },\n    colours:{\n        yellow:{english: 'yellow', sv: 'gul', definition: 'the colour like that of a lemon or gold or the sun', clue: 'you get orange when you mix this colour with red'},\n        red:{english: 'red', sv: 'röd', definition: 'the colour of fresh blood', clue: 'one of the primary colours'},\n        purple:{english: 'purple', sv: 'lila', definition: 'the dark reddish-blue colour', clue: 'the colour under your eyes'},\n        brown:{english: 'brown', sv: 'brun', definition: 'the colour of chocolate or soil', clue: 'a common colour for hair'},\n        black:{english: 'black', sv: 'svart', definition: 'the colour of coal or a very dark night', clue: 'the darkest colour there is'},\n        white:{english: 'white', sv: 'vit', definition: 'the colour like that of snow, milk, or bone', clue: 'the lightest colour there is'},\n        green:{english: 'green', sv: 'grön', definition: 'the colour of grass', clue: 'the colour between blue and yellow'},\n    },\n    verbs:{\n        go:{english: 'go', sv: 'gå', definition: 'move to another place on foot', clue: 'another word for walk'},\n        run:{english: 'run', sv: 'springa', definition: 'go on foot but fast', clue: 'the action of each foot lifting before the next foot touches the ground'},\n        eat:{english: 'eat', sv: 'äta', definition: 'to put food into the mouth', clue: 'favourite activity of the day besides sleeping'},\n        sleep:{english: 'sleep', sv: 'sova', definition: 'to be in the state of rest when your eyes are closed and your body is not active', clue: 'to be in  the state of the body when you dream'},\n        write:{english: 'write', sv: 'skriva', definition: 'to make marks that represent letters, words, or numbers on a surface, such as paper or a computer screen', clue: 'a pencil, pen or a keyboard is required'},\n        sing:{english: 'sing', sv: 'sjunga', definition: 'to make musical sound with the voice', clue: 'favourite activity in the shower'},\n        drink:{english: 'drink', sv: 'dricka', definition: 'to take liquid into the body through the mouth', clue: 'consume water and other liquids'},\n    },\n    family:{\n        cousin:{english: 'cousin', article: 'en', sv: 'kusin', definition: \"a child of a person's aunt or uncle\", clue: 'a hairy character from TV series Addams Family: Itt'},\n        brother:{english: 'brother', article: 'en', sv: 'bror', definition: 'a man or boy with the same parents as another person', clue: 'the opposite of a sister'},\n        sister:{english: 'sister', article: 'en', sv: 'syster', definition: 'a girl or woman who has the same parents as another person', clue: 'the opposite of a brother'},\n        mum:{english: 'mum', article: 'en', sv: 'mamma', definition: 'the female parent', clue: 'the opposite of dad'},\n        dad:{english: 'dad', article: 'en', sv: 'pappa', definition: 'the male parent', clue: 'the opposite of mum'},\n        grandma_1:{english: \"grandma from your mother's side\", article: 'en', sv: 'mormor', definition: 'mother of your mother', clue: 'the opposite of grandpa'},\n        grandma_2:{english: \"grandma from your father's side\", article: 'en', sv: 'farmor', definition: 'mother of your father', clue: 'the opposite of grandpa'},\n    },\n    geographical:{\n        river:{english: 'river', article: 'en', sv: 'flod', definition: 'a natural wide flow of fresh water across the land', clue: 'Amazon and Nile'},\n        mountain:{english: 'mountain', article: 'ett', sv: 'berg', definition: \"a raised part of the earth's surface, much larger than a hill\", clue: 'Fuji and Kebnekaise'},\n        sea:{english: 'sea', article: 'ett', sv: 'hav', definition: 'the salty water that covers a large part of the surface of the earth, smaller than an ocean', clue: 'Baltic and Caspian'},\n        forest:{english: 'forest', article: 'en', sv: 'skog', definition: 'a large area of land covered with trees and plants', clue: 'Amazon, Siberian'},\n        lake:{english: 'lake', article: 'en', sv: 'sjö', definition: 'a large area of water surrounded by land and not connected to the sea', clue: 'Baikal, Loch Ness'},\n        cliff:{english: 'cliff', article: 'en', sv: 'klippa', definition: 'a high area of rock with a very steep side, often on a coast', clue: 'Trolltunga'},\n        cave:{english: 'cave', article: 'en', sv: 'grotta', definition: 'a large hole in the side of a hill, cliff, or mountain, or one that is underground', clue: 'Lascaux'},\n    }\n    }\n","export const animalsGrammar: { [index: string]: {cat?: string, en_cat?:string, dog?:string, en_dog?:string, fox?:string, en_fox?:string,  \n    sheep?:string, ett_sheep?:string, peacock?: string, en_peacock?:string, crocodile?:string, en_crocodile?:string, giraffe?:string,\n    en_giraffe?:string}} ={\n        \"katt\" : {cat: \"cat\"},\n        \"en katt\" : {en_cat: \"cat\"},\n    \n        \"hund\" : {dog: \"dog\"},\n        \"en hund\" : {en_dog: \"dog\"},\n    \n        \"räv\": {fox: \"fox\"},\n        \"en räv\": {en_fox: \"fox\"},\n    \n        \"får\": {sheep: \"sheep\"},\n        \"ett får\": {ett_sheep: \"sheep\"},\n    \n        \"giraff\": {giraffe: \"griffe\"},\n        \"en giraff\": {en_giraffe: \"giraffe\"},\n    \n        \"krokodil\": {crocodile: \"crocodile\"},\n        \"en krokodil\": {en_crocodile: \"crocodile\"},\n    \n        \"påfågel\": {peacock: \"peacock\"},\n        \"en påfågel\": {en_peacock: \"peacock\"}\n    }\n\nexport const weekdaysGrammar: { [index: string]: {Monday?: string, Tuesday?:string, Wednesday?:string, Thursday?:string, Friday?:string, Saturday?:string,  \n    Sunday?:string}} ={\n        \"Måndag\" : {Monday: \"Monday\"},\n        \"måndag\" : {Monday: \"Monday\"},\n        \"en måndag\" : {Monday: \"Monday\"},\n        \"en Måndag\" : {Monday: \"Monday\"},\n\n        \"Tisdag\" : {Tuesday: \"Tuesday\"},\n        \"tisdag\" : {Tuesday: \"Tuesday\"},\n        \"en Tisdag\" : {Tuesday: \"Tuesday\"},\n        \"en tisdag\" : {Tuesday: \"Tuesday\"},\n\n        \"Onsdag\": {Wednesday: \"Wednesday\"},\n        \"onsdag\": {Wednesday: \"Wednesday\"},\n        \"en Onsdag\": {Wednesday: \"Wednesday\"},\n        \"en onsdag\": {Wednesday: \"Wednesday\"},\n\n        \"Torsdag\": {Thursday: \"Thursday\"},\n        \"torsdag\": {Thursday: \"Thursday\"},\n        \"en Torsdag\": {Thursday: \"Thursday\"},\n        \"en torsdag\": {Thursday: \"Thursday\"},\n\n        \"Fredag\": {Friday: \"Friday\"},\n        \"fredag\": {Friday: \"Friday\"},\n        \"en Fredag\": {Friday: \"Friday\"},\n        \"en fredag\": {Friday: \"Friday\"},\n\n        \"Lördag\": {Saturday: \"Saturday\"},\n        \"lördag\": {Saturday: \"Saturday\"},\n        \"en Lördag\": {Saturday: \"Saturday\"},\n        \"en lördag\": {Saturday: \"Saturday\"},\n\n        \"Söndag\": {Sunday: \"Sunday\"},\n        \"söndag\": {Sunday: \"Sunday\"},\n        \"en Söndag\": {Sunday: \"Sunday\"},\n        \"en söndag\": {Sunday: \"Sunday\"},\n    }\n\n    \nexport const gameGrammar: { [index: string]: {start?: string, quit?: string, skip?: string, repeat?: string, change_game?: string}} = {\n\n    \"start\": {start: \"start\"},\n    \"begin\": {start: \"start\"},\n    \"let's begin\": {start: \"start\"},\n\n    \"go back\": {quit: \"quit\"},\n    \"back\": {quit: \"quit\"},\n    \"return\": {quit: \"quit\"},\n    \"quit\": {quit: \"quit\"},\n    \"I wish to quit\": {quit: \"quit\"},\n    \"stop\": {quit: \"quit\"},\n    \"pause\": {quit: \"quit\"},\n    \"I give up\": {quit: \"quit\"},\n    \"give up\": {quit: \"quit\"},\n\n\n\n    \"skip\": {skip: 'skip'},\n    \"pass\": {skip: 'skip'},\n    \"skip this one\": {skip: 'skip'},\n    \"skip it\": {skip: 'skip'},\n    \"next\": {skip: 'skip'},\n\n    \"repeat\": {repeat: 'repeat'},\n    \"play pictures again\": {repeat: 'repeat'},\n    \"I would like to pictures again\": {repeat: 'repeat'},\n    \"let's play pictures\": {repeat: 'repeat'},\n    \"let's play pictures again\": {repeat: 'repeat'},\n    \"let's try pictures again\": {repeat: 'repeat'},\n    \"Let's try words again\": {repeat: 'repeat'},\n    \"I would like to guess pictures again\": {repeat: 'repeat'},\n    \"let's guess pictures\": {repeat: 'repeat'},\n    \"let's guess pictures again\": {repeat: 'repeat'},\n    \"Let's try pictures again\": {repeat: 'repeat'},\n    \"play definitions again\": {repeat: 'repeat'},\n    \"I would like to definitions again\": {repeat: 'repeat'},\n    \"let's play definitions\": {repeat: 'repeat'},\n    \"let's play definitions again\": {repeat: 'repeat'},\n    \"Let's try definitions again\": {repeat: 'repeat'},\n    \"play wordplay again\": {repeat: 'repeat'},\n    \"I would like to wordplay again\": {repeat: 'repeat'},\n    \"let's play wordplay\": {repeat: 'repeat'},\n    \"let's play wordplay again\": {repeat: 'repeat'},\n    \"play words again\": {repeat: 'repeat'},\n    \"I would like to words again\": {repeat: 'repeat'},\n    \"let's play words\": {repeat: 'repeat'},\n    \"let's play words again\": {repeat: 'repeat'},\n    \"Let's play words again\": {repeat: 'repeat'},\n    \"pictures\": {repeat: 'repeat'},\n    \"Pictures\": {repeat: 'repeat'},\n    \"Definitions\": {repeat: 'repeat'},\n    \"Words\": {repeat: 'repeat'},\n    \"words\": {repeat: 'repeat'},\n\n    \n    \"I would like to guess words again\": {repeat: 'repeat'},\n    \"let's guess words\": {repeat: 'repeat'},\n    \"let's guess words again\": {repeat: 'repeat'},\n\n    \"I would like to guess definitions again\": {repeat: 'repeat'},\n    \"let's guess definitions\": {repeat: 'repeat'},\n    \"let's guess definitions again\": {repeat: 'repeat'},\n\n    \"yes\": {repeat: 'repeat'},\n\n    \"come again \": {repeat: 'repeat'},\n\n    \"I didn't hear you\": {repeat: 'repeat'},\n    \"say again\": {repeat: 'repeat'},\n    \"repeat question\": {repeat: 'repeat'},\n    \"repeat the question\": {repeat: 'repeat'},\n    \"again\": {repeat: 'repeat'},\n    \"restart\": {repeat: 'repeat'},\n    \"play again\": {repeat: 'repeat'},\n    \"same category\": {repeat: 'repeat'},\n\n    \"change game\": {change_game: 'change_game'},\n    \"change category\": {change_game: 'change_game'},\n    \"other category\": {change_game: 'change_game'},\n    \"categories\": {change_game: 'change_game'},\n    \"another\": {change_game: 'change_game'},\n    \"another game\": {change_game: 'change_game'},\n    \"change\": {change_game: 'change_game'},\n    \"different\": {change_game: 'change_game'},\n    \"something else\": {change_game: 'change_game'},\n    \"let's try something else something else\": {change_game: 'change_game'},\n    \"I want to try something else something else\": {change_game: 'change_game'}\n\n}\n\nexport const occupationsGrammar: { [index: string]: {teacher?: string, en_teacher?: string, doctor?:\n     string, en_doctor?: string, builder?: string, en_builder?: string, lifeguard?: string, en_lifeguard?: string,\n     actor?: string, en_actor?: string, engineer?: string, en_engineer?: string, garbage_man?: string,\n     en_garbage_man?: string}} = {\n\n    \"lärare\": {teacher: \"teacher\"},\n    \"en lärare\": {en_teacher: \"teacher\"},\n\n    \"läkare\": {doctor: \"doctor\"},\n    \"en läkare\": {en_doctor: \"doctor\"},\n\n    \"byggare\": {builder: \"builder\"},\n    \"en byggare\": {en_builder: \"builder\"},\n\n    \"badvakt\": {lifeguard: \"lifeguard\"},\n    \"en badvakt\": {en_lifeguard: \"lifeguard\"},\n\n    \"skådespelare\": {actor: \"actor\"},\n    \"en skådespelare\": {en_actor: \"actor\"},\n\n    \"ingengör\": {engineer: \"engineer\"},\n    \"en ingengör\": {en_engineer: \"engineer\"},\n\n    \"sopgubbe\": {garbage_man: \"garbage man\"},\n    \"sop gubbe\": {garbage_man: \"garbage man\"},\n    \"en sopgubbe\": {en_garbage_man: \"garbage man\"},\n    \"en sop gubbe\": {en_garbage_man: \"garbage man\"},\n\n}\n\nexport const coloursGrammar:{ [index: string]: {yellow?: string, red?: string, purple?: string, brown?: string, black?: string, white?: string, green?: string}} = {\n    \n    \"gul\": {yellow: \"yellow\"},\n    \"röd\": {red: \"red\"},\n    \"lila\": {purple: \"purple\"},\n    \"brun\": {brown: \"brown\"},\n    \"Brun\": {brown: \"brown\"},\n\n    \"svart\": {black: \"black\"},\n    \"vit\": {white: \"white\"},\n    \"grön\": {green: \"green\"},\n}\n\nexport const verbsGrammar:{ [index: string]: {go?: string, run?: string, eat?:string, sleep?:string, write?: string, sing?: string, drink?: string}} = {\n    \n    \"gå\": {go: \"go\"},\n    \"springa\": {run: \"run\"},\n    \"äta\": {eat: \"eat\"},\n    \"sova\": {sleep: \"sleep\"},\n    \"skriva\": {write: \"write\"},\n    \"sjunga\": {sing: \"sing\"},\n    \"dricka\": {drink: \"drink\"},   \n}\n\nexport const familyGrammar:{ [index: string]: {cousin?: string, en_cousin?: string, brother?: string, en_brother?: string, \n    sister?: string, en_sister?: string, mum?: string, en_mum?: string, dad?: string, en_dad?: string, grandma_1?: string, \n    en_grandma_1?: string, grandma_2?: string, en_grandma_2?: string}} = {\n    \n    \"kusin\": {cousin: \"cousin\"},\n    \"en kusin\" :{en_cousin: \"cousin\"},\n\n    \"bror\": {brother: \"brother\"},\n    \"en bror\": {en_brother: \"brother\"},\n\n    \"syster\": {sister: \"sister\"},\n    \"en syster\": {en_sister: \"sister\"},\n\n    \"mamma\": {mum: \"mum\"},\n    \"mor\": {mum: \"mum\"},\n\n    \"en mor\": {en_mum: \"mum\"},\n    \"en mamma\": {en_mum: \"mum\"},\n\n    \"pappa\": {dad: \"dad\"},\n    \"far\": {dad: \"dad\"},\n\n    \"en pappa\": {en_dad: \"dad\"},\n    \"en far\": {en_dad: \"dad\"},\n\n    \"mormor\": {grandma_1: \"grandma from your mother's side\"},\n    \"en mormor\": {en_grandma_1: \"grandma from your mother's side\"},\n\n    \"farmor\": {grandma_2: \"grandma from your father's side\"},\n    \"en farmor\": {en_grandma_2: \"grandma from your father's side\"},\n}\n\nexport const geographicalGrammar:{ [index: string]: {river?: string, en_river?: string, mountain?: string, ett_mountain?: string, \n    sea?: string, ett_sea?: string, forest?: string, en_forest?: string, lake?: string, en_lake?: string, cliff?: string, \n    en_cliff?: string, cave?: string, en_cave?: string}} = {\n\n    \"flod\": {river: \"river\"},\n    \"en flod\": {en_river: \"river\"},\n\n    \"berg\": {mountain: \"mountain\"},\n    \"ett berg\": {ett_mountain: \"mountain\"},\n\n    \"hav\": {sea: \"sea\"},\n    \"ett hav\": {ett_sea: \"sea\"},\n\n    \"skog\": {forest: \"forest\"},\n    \"en skog\": {en_forest: \"forest\"},\n\n    \"sjö\": {lake: \"lake\"},\n    \"en sjö\": {en_lake: \"lake\"},\n\n    \"klippa\": {cliff: \"cliff\"},\n    \"en klippa\": {en_cliff: \"cliff\"},\n\n    \"grotta\": {cave: \"cave\"},\n    \"en grotta\": {en_cave: \"cave\"},\n    \n}\n\n","export default __webpack_public_path__ + \"static/media/Background.e69d8289.jpg\";","export default __webpack_public_path__ + \"static/media/cat.50ffdf53.jpg\";","export default __webpack_public_path__ + \"static/media/dog.f725cdb3.jpeg\";","export default __webpack_public_path__ + \"static/media/fox.0d78e35a.jpg\";","export default __webpack_public_path__ + \"static/media/sheep.025fc321.jpg\";","export default __webpack_public_path__ + \"static/media/giraffe.0931a8ad.jpeg\";","export default __webpack_public_path__ + \"static/media/crocodile.93dd3231.jpg\";","export default __webpack_public_path__ + \"static/media/peacock.296d6661.jpg\";","export default __webpack_public_path__ + \"static/media/Monday.b054f067.jpg\";","export default __webpack_public_path__ + \"static/media/Tuesday.32ee19af.jpg\";","export default __webpack_public_path__ + \"static/media/Wednesday.bb1e0c06.jpeg\";","export default __webpack_public_path__ + \"static/media/Thursday.e9ff5178.jpg\";","export default __webpack_public_path__ + \"static/media/Friday.7c21e753.jpg\";","export default __webpack_public_path__ + \"static/media/Saturday.3462564d.jpg\";","export default __webpack_public_path__ + \"static/media/Sunday.c0a30405.jpg\";","export default __webpack_public_path__ + \"static/media/Teacher.5167cf24.jpeg\";","export default __webpack_public_path__ + \"static/media/Doctor.a622d80f.png\";","export default __webpack_public_path__ + \"static/media/Builder.3b203b02.jpg\";","export default __webpack_public_path__ + \"static/media/Lifeguard.1ab0166e.jpg\";","export default __webpack_public_path__ + \"static/media/Actor.31df764a.jpg\";","export default __webpack_public_path__ + \"static/media/Engineer.899fb30e.png\";","export default __webpack_public_path__ + \"static/media/Garbage_man.d862c4b3.jpeg\";","export default __webpack_public_path__ + \"static/media/yellow.10463a34.jpg\";","export default __webpack_public_path__ + \"static/media/red.f0447810.jpg\";","export default __webpack_public_path__ + \"static/media/purple.32d2b3c5.png\";","export default __webpack_public_path__ + \"static/media/brown.f8b2096e.jpg\";","export default __webpack_public_path__ + \"static/media/black.a7da1bdc.jpg\";","export default __webpack_public_path__ + \"static/media/white.68b7e559.jpg\";","export default __webpack_public_path__ + \"static/media/green.2409d237.jpg\";","export default __webpack_public_path__ + \"static/media/go.f12b8b4f.png\";","export default __webpack_public_path__ + \"static/media/run.96fb7678.jpg\";","export default __webpack_public_path__ + \"static/media/eat.9929d392.jpg\";","export default __webpack_public_path__ + \"static/media/sleep.e8ab6c72.jpg\";","export default __webpack_public_path__ + \"static/media/write.132dc226.jpg\";","export default __webpack_public_path__ + \"static/media/sing.0708ecb8.jpg\";","export default __webpack_public_path__ + \"static/media/drink.1de52e93.jpg\";","export default __webpack_public_path__ + \"static/media/cousin.3d2a5b2c.jpg\";","export default __webpack_public_path__ + \"static/media/brother.8ad8df00.jpeg\";","export default __webpack_public_path__ + \"static/media/sister.c771e0fc.jpg\";","export default __webpack_public_path__ + \"static/media/mother.327fe16f.jpg\";","export default __webpack_public_path__ + \"static/media/dad.42930930.jpg\";","export default __webpack_public_path__ + \"static/media/grandma_1.9174129a.jpg\";","export default __webpack_public_path__ + \"static/media/grandma_2.56786883.jpg\";","export default __webpack_public_path__ + \"static/media/river.5acdeccb.png\";","export default __webpack_public_path__ + \"static/media/mountain.ea8035ef.jpg\";","export default __webpack_public_path__ + \"static/media/sea.ddac303c.jpg\";","export default __webpack_public_path__ + \"static/media/forest.321b84dd.jpg\";","export default __webpack_public_path__ + \"static/media/lake.5382d68f.jpg\";","export default __webpack_public_path__ + \"static/media/cliff.57604ecd.jpg\";","export default __webpack_public_path__ + \"static/media/cave.922e36b9.jpg\";","import { MachineConfig, send, Action, assign, actions } from \"xstate\";\nimport {game_vocab} from \"./definitions_and_words\"\nimport {gameGrammar, animalsGrammar, weekdaysGrammar, occupationsGrammar, familyGrammar, verbsGrammar, coloursGrammar, geographicalGrammar} from \"./grammars/vocabGrammar\"\n\nconst promptReset: Action<SDSContext, SDSEvent> = assign((context) => { return { count:0} })\nconst scoreReset: Action<SDSContext, SDSEvent> = assign((context) => { return { score:0} })\n\nexport function say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n \nexport function listen(): Action<SDSContext, SDSEvent> {\n    return send('LISTEN')\n}\n\nconst {cancel} = actions\n\nfunction invoke_rasa(go_to_state: string,): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({ \n            invoke: {\n                id: 'rasaApi',\n                src: (context, event) =>  nluRequest(context.task),\n                onDone:{\n                    target: go_to_state,\n                    actions:[\n                        assign((context, event) => { return { intentResult: event.data.intent.name} }),\n                        (context:SDSContext, event:any) => console.log(event.data)]\n                },\n                onError:{\n                    target: '#welcome',\n                    actions: (context, event) => console.log(event.data)\n}}})}\n\nfunction sayAskTimeout(say_this: Action<SDSContext, SDSEvent>): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({ \n        initial: 'prompt',\n        states: {\n            prompt: {\n                entry: [promptReset, say_this],\n                on: { ENDSPEECH: 'ask'}},\n            ask: {\n                entry: [send('LISTEN'), /*send ('TIMEOUT', {delay: 30000, id: 'timer'})*/]\n            },\n            nomatch: {\n                entry: say('Sorry, please repeat.'),\n                on: {ENDSPEECH: \"ask\"}\n            },\n            timeout_final: {\n                entry: say('Returning to idle.'),\n                on: {ENDSPEECH: \"idle\"}\n            },\n            idle:{\n                id: 'idle',\n                type: 'final'\n            },\n            timeout: {\n                initial: 'prompt',\n                on: {TIMEOUT: [{cond: (context) => context.count ===1, target: 'reprompt0'},\n                                {cond: (context) => context.count ===2, target: 'reprompt1'},\n                                {cond: (context) => context.count ===3, target: 'reprompt2'},\n                                {cond: (context) => context.count ===4, target: 'timeout_final'}]},\n                states:{\n                    prompt: {\n                        entry: send('TIMEOUT')\n                    }\n                }\n            },\n            reprompt0: {\n                entry: say(\" Doesn't look like I can hear you well. Please try again\"),\n                on: {ENDSPEECH: 'ask'}\n            },\n            reprompt1: {\n                entry: say('Sorry, still nothing.'),\n                on: {ENDSPEECH: 'ask'}\n            },\n            reprompt2: {\n                entry: say(':et us give it one last try'),\n                on: {ENDSPEECH: 'ask'}\n}}})}\n\n\nfunction Say_play(say_word: Action<SDSContext, SDSEvent>): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({ \n        initial: 'prompt',\n        states: {\n            prompt: {\n                entry: [promptReset, say_word],\n                on: {ENDSPEECH: 'ask'}},\n            ask: {\n                entry: [send('LISTEN'), send ('TIMEOUT', {delay: 30000, id:'timer2'})]\n            },\n            nomatch: {\n                entry: say(\"I'm afraid not! Try again!\"),\n                on: {ENDSPEECH: \"ask\"}\n            },\n            idle:{\n                type: 'final'\n            },\n            timeout: {\n                initial: 'prompt',\n                on: {TIMEOUT: [{target: 'reprompt'}]},\n                states:{\n                    prompt: {\n                        entry: send('TIMEOUT')\n                    }\n                }\n            },\n            almost:{\n                entry: say(\"Right! But what is the correct article?\"),\n                on:{ENDSPEECH: 'ask'}\n            },\n            match: {\n                entry: say('Correct!'),\n                on: {ENDSPEECH:'go_to_next'}\n            },\n            reprompt:{\n                entry: say('Time is running out!')\n\n            },\n            go_to_next:{\n                entry: send('NEXT_STATE')\n            },\n            skip_to_next:{\n                entry: send('SKIP_STATE')\n            },\n}})}\n\nfunction Show_play(): MachineConfig<SDSContext, any, SDSEvent> {\n    return ({ \n        initial: 'prompt',\n        states: {\n            prompt: {\n                entry: send('SHOW')},\n            show:{\n                entry: say(' '),\n                on:{\n                    ENDSPEECH: 'ask'\n                }\n            },\n            ask: { entry: listen()\n            },\n            nomatch: {\n                entry: say(\"I'm afraid not! Try again!\"),\n                on: {ENDSPEECH: \"ask\"}\n            },\n            idle:{\n                type: 'final'\n            },\n            reprompt: {\n                entry: [say(\"Time is up three!\")],\n                on: {ENDSPEECH: 'go_to_next'}\n            },\n            almost:{\n                entry: say(\"Right! But what is the correct article?\"),\n                on:{ENDSPEECH: 'ask'}\n            },\n            match: {\n                entry: say('Correct!'),\n                on: {ENDSPEECH:'go_to_next'}\n            },\n            go_to_next:{\n                entry: send('NEXT_STATE')\n            },\n            skip_to_next:{\n                entry: send('SKIP_STATE')\n            },\n}})}\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = 'https://swenglish.herokuapp.com/model/parse'\nconst nluRequest = (text: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: 'POST',\n        headers: { 'Origin': 'http://maraev.me' }, // only required with proxy\n        body: `{\"text\": \"${text}\"}`\n    }))\n        .then(data => data.json()); \n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'start_point',\n    states: {\n        start_point:{\n            id: 'starting_poing',\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n        welcome: {\n            id: 'welcome',\n            initial: 'prompt',\n            on: {ENDSPEECH:'which_game'},\n            states:{\n                prompt:{\n                    entry: [scoreReset, say('Welcome to Sweenglish!')]}\n            }\n        },\n        which_game:{\n            initial: 'prompt',\n            id: 'which_game',\n            on: {\n                RECOGNISED:[{\n                    actions: assign((context) => { return { task: context.recResult } }),\n                    target: 'choice'}]},\n            \n            states:{\n                prompt: {\n                    entry: say('Which game would you like to play?'),\n                    on: {ENDSPEECH: 'ask'}\n                },\n                ask:{ entry: listen()\n                }\n            }},\n\n        choice:{\n            initial: 'prompt',\n            states:{\n                prompt: { ...invoke_rasa('#tool')}\n            }\n        },\n        tool:{\n            initial: 'prompt',\n            id: 'tool',\n            on:{\n                ENDSPEECH:[{\n                    cond: (context) => context.intentResult === 'Definitions',\n                    target: '#definitions'},\n                    {cond: (context) => context.intentResult === 'Words',\n                    target: '#wordplay'},\n                    {cond: (context) => context.intentResult === 'Pictures',\n                    target: '#pictures'},\n                    {cond: (context) => context.intentResult === 'Quit',\n                    target: '#exit_app'},\n                    {cond: (context) => context.intentResult === 'Help',\n                    target: '#general_help'},\n                    {cond: (context) => context.intentResult === 'Animals' || context.intentResult === 'Weekdays' || context.intentResult === 'Family' || context.intentResult === 'Occupation' \n                    || context.intentResult === 'Colours' || context.intentResult === 'Verbs' || context.intentResult === 'Family' || context.intentResult === 'Geographical',\n                    target: '.pick_game'},\n                {target:'.nomatch'}]\n            },\n            states: {\n                prompt: {\n                    entry: send('ENDSPEECH')},\n                nomatch: {\n                    entry: say(\"Sadly such game is not yet implemented. Let us try again.\"),\n                    on: {ENDSPEECH: '#which_game'}\n                    },\n                pick_game:{\n                    entry: say(\"Great choice, but you have to choose a game mode first. Please try again\"),\n                    on: {ENDSPEECH: '#which_game'}}}\n        },\n        general_help:{\n            initial: 'prompt',\n            id: 'general_help',\n            on: {ENDSPEECH: '#which_game'},\n            states: {\n                prompt: {entry: say(' Swenglish has three games: wordplay, definitions, and pictures. In Wordplay, you will be given a word in English and will have to come up,\\\n                 with its correspondence in Swedish. In definitions, you will be given definitions and will have to say the corresponding word in Swedish. In pictures, you will\\\n                be shown a picture and will have to name what you see in Swedish.')}\n        }},\n        wordplay: {\n            initial: 'prompt',\n            id: 'wordplay',\n            on: {\n                RECOGNISED:[{\n                    actions: [assign((context) => { return { task: context.recResult} }), cancel('timer'), cancel('timer2')],\n                    target: '#wordplay_invocation'}],\n                    TIMEOUT: '.timeout'\n            },\n                    ...sayAskTimeout(say(\"Wordplay! Pick a category and let's start.\"))\n\n        },\n            wordplay_invocation:{\n                initial: 'prompt',\n                id: 'wordplay_invocation',\n                states:{\n                    prompt: { ...invoke_rasa('#wordplay_choice')}\n                }\n            },\n            wordplay_choice:{\n                initial: 'prompt',\n                id: 'wordplay_choice',\n                on:{\n                    ENDSPEECH:[{\n                        cond: (context) => context.intentResult === 'Help',\n                        target: 'wordplay_help'},\n                        {cond: (context) => context.intentResult === 'Quit',\n                        target: '#quit_game'},\n                        {cond: (context) => context.intentResult === 'Definitions',\n                        target: '#definitions'},\n                        {cond: (context) => context.intentResult === 'Wordplay',\n                        target: 'wordplay_again'},\n                        {cond: (context) => context.intentResult === 'Pictures',\n                        target: '#pictures'},\n                        {cond: (context) => context.intentResult === 'Animals',\n                        actions: assign((context) => { return { game_category: context.recResult} }),\n                        target: 'wordplay_pregame'},\n                        {cond: (context) => context.intentResult === 'Weekdays',\n                        actions: assign((context) => { return { game_category: context.recResult} }),\n                        target: 'wordplay_pregame'},\n                        {cond: (context) => context.intentResult === 'Occupation',\n                        actions: assign((context) => { return { game_category: context.recResult} }),\n                        target: 'wordplay_pregame'},\n                        {cond: (context) => context.intentResult === 'Colours',\n                        actions: assign((context) => { return { game_category: context.recResult} }),\n                        target: 'wordplay_pregame'},\n                        {cond: (context) => context.intentResult === 'Verbs',\n                        actions: assign((context) => { return { game_category: context.recResult} }),\n                        target: 'wordplay_pregame'},\n                        {cond: (context) => context.intentResult === 'Family',\n                        actions: assign((context) => { return { game_category: context.recResult} }),\n                        target: 'wordplay_pregame'},\n                        {cond: (context) => context.intentResult === 'Geographical',\n                        actions: assign((context) => { return { game_category: context.recResult} }),\n                        target: 'wordplay_pregame'},\n  \n                    {target:'.nomatch'}]\n                },\n                states: {\n                    prompt: {\n                        entry: send('ENDSPEECH')},\n                    nomatch: {\n                        entry: say(\"Unavailable right now.\"),\n                        on: {ENDSPEECH: '#welcome'}\n                            \n                        }\n                            \n                    }\n    \n            },\n            wordplay_again:{\n                id: 'wordplay_again',\n                on:{ENDSPEECH:[{\n                    actions: assign((context) => { return { task: context.recResult } }),\n                    target: '#wordplay_invocation'}],\n                    TIMEOUT: '.timeout' },\n                ...sayAskTimeout(say('You are already in the Wordplay mode! Pick a category to start playing.'))\n\n            },\n            wordplay_help:{\n                initial: 'prompt',\n                id: 'wordplay_help',\n                on: {\n                    RECOGNISED:[{\n                        actions: assign((context) => { return { task: context.recResult } }),\n                        target: 'wordplay_invocation'},\n                    \n                    {target: \".nomatch\"}]\n                },\n                        ...sayAskTimeout(say(\"Wordplay is a game where you will be given a word in English and will have to say its correspondence in Swedish. You can choose from seven categories:\\\n                        Animals, Weekdays, Occupations, Colours, Verbs, Family, and Nature Objects. Each category consists of seven words. Note that only answers in Swedish will be accepted.\\\n                        Where applicable, be mindful of articles! You can quit the game by saying quit at any point in the game. You may now pick a category or change the game.\"))\n            },\n            wordplay_quit:{\n                initial: 'prompt',\n                id: 'wordplay_quit',\n                on: {ENDSPEECH: '#which_game'},\n               ...sayAskTimeout(say(\"Quitting Wordplay.\"))\n            },\n            wordplay_pregame:{\n                initial: 'prompt',\n                on: {\n                    RECOGNISED: [{\n                        cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Animals\",\n                        target: \"#wordplay_animals_begin\"},\n                        {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Weekdays\",\n                        target: \"#wordplay_weekdays_begin\"},\n                        {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Occupation\",\n                        target: \"#wordplay_occupations_begin\"},\n                        {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Colours\",\n                        target: \"#wordplay_colours_begin\"},\n                        {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Verbs\",\n                        target: \"#wordplay_verbs_begin\"},\n                        {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Family\",\n                        target: \"#wordplay_family_begin\"},\n                        {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Grographical\",\n                        target: \"#wordplay_geographical_begin\"},\n                        {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}),\n                        target: \"#quit_game\"},\n                    { target: \".nomatch\" }],\n                    ENDSPEECH: '.ask'\n                },\n                states: {\n                    prompt:\n                    {entry: send((context) => ({\n                    type: \"SPEAK\",\n                    value: `You have chosen ${context.game_category}. Say start - if you wish to begin; or quit - if you wish to change the game or the mode.`}))},\n                    nomatch:{\n                        entry: say('Sorry, I did not quite catch that. Please repeat'),\n                        on: {ENDSPEECH: 'ask'},\n                    },\n                    ask: {\n                        entry: listen()\n                    }}},\n\n\n/* ===================================================== WORDPLAY ANIMALS ===================================================================================================*/\n            wordplay_animals_begin:{\n                initial: 'prompt',\n                id: 'wordplay_animals_begin',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"en_cat\" in (animalsGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                    {cond: (context) => \"cat\" in (animalsGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                    actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                    {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                     actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                    {actions: cancel('timer2'), target:'.nomatch'}],\n\n                        NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_dog'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_dog'},\n                        TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n            },\n            ...Say_play(say(game_vocab.animals.cat.english))\n        },\n        wordplay_dog:{\n            initial: 'prompt',\n            id: 'wordplay_dog',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_dog\" in (animalsGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"dog\" in (animalsGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: [cancel('timer2'), cancel('timer')], target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_fox'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_fox'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.dog.english))\n        },\n        wordplay_fox:{\n            initial: 'prompt',\n            id: 'wordplay_fox',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_fox\" in (animalsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"fox\" in (animalsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_sheep'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_sheep'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.fox.english))\n            },    \n        wordplay_sheep:{\n            initial: 'prompt',\n            id: 'wordplay_sheep',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"ett_sheep\" in (animalsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"sheep\" in (animalsGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target:  '#wordplay_giraffe'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_giraffe'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.sheep.english))\n        },          \n        wordplay_giraffe:{\n            initial: 'prompt',\n            id: 'wordplay_giraffe',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_giraffe\" in (animalsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"giraffe\" in (animalsGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: cancel('timer2'),  target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_crocodile'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_crocodile'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.giraffe.english))\n        },   \n        wordplay_crocodile:{\n            initial: 'prompt',\n            id: 'wordplay_crocodile',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_crocodile\" in (animalsGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"crocodile\" in (animalsGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_peacock'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_peacock'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.crocodile.english))\n        },      \n        wordplay_peacock:{\n            initial: 'prompt',\n            id: 'wordplay_peacock',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_peacock\" in (animalsGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"peacock\" in (animalsGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.peacock.english))\n        },\n/* ==================================================================== WORDPLAY WEEKDAYS =================================================================================*/\n        wordplay_weekdays_begin:{\n            initial: 'prompt',\n            id: 'wordplay_weekdays_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Monday\" in (weekdaysGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_tuesday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_tuesday'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Monday.english))},\n        \n        wordplay_tuesday:{\n            initial: 'prompt',\n            id: 'wordplay_tuesday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Tuesday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_wednesday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_wednesday'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Tuesday.english))\n        },\n\n        wordplay_wednesday:{\n            initial: 'prompt',\n            id: 'wordplay_wednesday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Wednesday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_thursday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_thursday'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Wednesday.english))\n        },\n\n        wordplay_thursday:{\n            initial: 'prompt',\n            id: 'wordplay_thursday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Thursday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_friday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_friday'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Thursday.english))\n        },\n\n        wordplay_friday:{\n            initial: 'prompt',\n            id: 'wordplay_friday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Friday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_saturday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_saturday'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Friday.english))\n        },\n\n        wordplay_saturday:{\n            initial: 'prompt',\n            id: 'wordplay_saturday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Saturday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_sunday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_sunday'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Saturday.english))\n        },\n\n        wordplay_sunday:{\n            initial: 'prompt',\n            id: 'wordplay_sunday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Sunday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Sunday.english))\n        },\n\n/* ==================================================================== WORDPLAY OCCUPATIONS =================================================================================*/\n        wordplay_occupations_begin:{\n            initial: 'prompt',\n            id: 'wordplay_occupations_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_teacher\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"teacher\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_doctor'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_doctor'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.teacher.english))},\n\n        wordplay_doctor:{\n            initial: 'prompt',\n            id: 'wordplay_doctor',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_doctor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"doctor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_builder'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_builder'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.doctor.english))},\n\n        wordplay_builder:{\n            initial: 'prompt',\n            id: 'wordplay_builder',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_builder\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"builder\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_lifeguard'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_lifeguard'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.builder.english))},\n\n        wordplay_lifeguard:{\n            initial: 'prompt',\n            id: 'wordplay_lifeguard',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_lifeguard\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"lifeguard\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_actor'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_actor'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.lifeguard.english))},\n\n        wordplay_actor:{\n            initial: 'prompt',\n            id: 'wordplay_actor',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_actor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"actor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_engineer'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_engineer'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.actor.english))},\n\n        wordplay_engineer:{\n            initial: 'prompt',\n            id: 'wordplay_engineer',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_engineer\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"engineer\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_garbage_man'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_garbage_man'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.engineer.english))},\n\n        wordplay_garbage_man:{\n            initial: 'prompt',\n            id: 'wordplay_garbage_man',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_garbage_man\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"garbage_man\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.garbage_man.english))},\n\n/* ==================================================================== WORDPLAY COLOURS =================================================================================*/\n        wordplay_colours_begin:{\n            initial: 'prompt',\n            id: 'wordplay_colours_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"yellow\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_red'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_red'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.yellow.english))},\n\n        wordplay_red:{\n            initial: 'prompt',\n            id: 'wordplay_red',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"red\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_purple'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_purple'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.red.english))},\n\n        wordplay_purple:{\n            initial: 'prompt',\n            id: 'wordplay_purple',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"purple\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_brown'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_brown'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.purple.english))},\n\n        wordplay_brown:{\n            initial: 'prompt',\n            id: 'wordplay_brown',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"brown\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_black'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_black'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.brown.english))},\n\n        wordplay_black:{\n            initial: 'prompt',\n            id: 'wordplay_black',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"black\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_white'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_white'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.black.english))},\n\n        wordplay_white:{\n            initial: 'prompt',\n            id: 'wordplay_white',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"white\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_green'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_green'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.white.english))},\n\n        wordplay_green:{\n            initial: 'prompt',\n            id: 'wordplay_green',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"green\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.green.english))},\n\n        /* ==================================================================== WORDPLAY VERBS =================================================================================*/\n        wordplay_verbs_begin:{\n            initial: 'prompt',\n            id: 'wordplay_verbs_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"go\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_run'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_run'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.go.english))},\n\n        wordplay_run:{\n            initial: 'prompt',\n            id: 'wordplay_run',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"run\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_eat'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_eat'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.run.english))},\n\n        wordplay_eat:{\n            initial: 'prompt',\n            id: 'wordplay_eat',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"eat\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_sleep'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_sleep'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.eat.english))},\n\n        wordplay_sleep:{\n            initial: 'prompt',\n            id: 'wordplay_sleep',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"sleep\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_write'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_write'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.sleep.english))},\n\n        wordplay_write:{\n            initial: 'prompt',\n            id: 'wordplay_write',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"write\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_sing'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_sing'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.write.english))},\n\n        wordplay_sing:{\n            initial: 'prompt',\n            id: 'wordplay_sing',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"sing\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_drink'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_drink'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.sing.english))},\n\n        wordplay_drink:{\n            initial: 'prompt',\n            id: 'wordplay_drink',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"drink\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.drink.english))},\n\n        /* ===================================================== WORDPLAY FAMILY ===================================================================================================*/\n        wordplay_family_begin:{\n            initial: 'prompt',\n            id: 'wordplay_family_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_cousin\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"cousin\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_brother'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_brother'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.cousin.english))},\n\n        wordplay_brother:{\n            initial: 'prompt',\n            id: 'wordplay_brother',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_brother\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"brother\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_sister'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_sister'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.brother.english))},\n\n        wordplay_sister:{\n            initial: 'prompt',\n            id: 'wordplay_sister',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_sister\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"sister\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_mum'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_mum'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.sister.english))},\n\n        wordplay_mum:{\n            initial: 'prompt',\n            id: 'wordplay_mum',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_mum\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"mum\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_dad'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_dad'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.mum.english))},\n\n        wordplay_dad:{\n            initial: 'prompt',\n            id: 'wordplay_dad',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_dad\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"dad\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_grandma_1'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_grandma_1'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.dad.english))},\n\n        wordplay_grandma_1:{\n            initial: 'prompt',\n            id: 'wordplay_grandma_1',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_grandma_1\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"grandma_1\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_grandma_2'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_grandma_2'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.grandma_1.english))},\n\n        wordplay_grandma_2:{\n            initial: 'prompt',\n            id: 'wordplay_grandma_2',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_grandma_2\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"grandma_2\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.grandma_2.english))},\n\n        /* ===================================================== WORDPLAY GEOGRAPHICAL  ===================================================================================================*/\n        wordplay_geographical_begin:{\n            initial: 'prompt',\n            id: 'wordplay_geographical_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_river\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"river\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_mountain'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_mountain'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.river.english))},\n\n        wordplay_mountain:{\n            initial: 'prompt',\n            id: 'wordplay_mountain',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"ett_mountain\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"mountain\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_sea'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_sea'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.mountain.english))},\n\n        wordplay_sea:{\n            initial: 'prompt',\n            id: 'wordplay_sea',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"ett_sea\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"sea\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_forest'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_forest'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.sea.english))},\n\n        wordplay_forest:{\n            initial: 'prompt',\n            id: 'wordplay_forest',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_forest\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"forest\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_lake'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_lake'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.forest.english))},\n\n        wordplay_lake:{\n            initial: 'prompt',\n            id: 'wordplay_lake',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_lake\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"lake\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_cliff'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_cliff'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.lake.english))},\n\n        wordplay_cliff:{\n            initial: 'prompt',\n            id: 'wordplay_cliff',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_cliff\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"cliff\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_cave'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_cave'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.cliff.english))},\n\n        wordplay_cave:{\n            initial: 'prompt',\n            id: 'wordplay_cave',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_cave\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"cave\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#wordplay_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.cave.english))},\n    /* ==================================================================== WORDPLAY SUMMARY =================================================================================*/\n\n                            wordplay_summary:{\n                                initial: 'prompt',\n                                id: 'wordplay_summary',\n                                on: {RECOGNISED:[\n                                    {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                                    actions: [cancel('timer2'), cancel('timer')], target:'#wordplay' },\n                                    {cond: (context) => \"change_game\" in (gameGrammar[context.recResult] || {}), \n                                    actions: [cancel('timer2'), cancel('timer')], target:'#which_game' },\n                                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}),\n                                    actions: [cancel('timer2'), cancel('timer')],  target:'#exit_app' }, \n                                    {target:'.nomatch'}]},\n                               ...sayAskTimeout(send((context) => ({\n                                type: \"SPEAK\",\n                                value: `Well done! Your current score is ${context.score} points. Would you like to play Wordplay again, or try some other game?`})))\n\n\n            },\n            definitions: {\n                initial: 'prompt',\n                id: 'definitions',\n                on: {\n                    RECOGNISED:[{\n                        actions: [assign((context) => { return { task: context.recResult } }), cancel('timer'), cancel('timer2')],\n                        target: '#definitions_invocation'}],\n                        TIMEOUT: '.timeout'\n                },\n                        ...sayAskTimeout(say(\"Definitions! Pick a category and let's start.\"))\n    \n            },\n                definitions_invocation:{\n                    initial: 'prompt',\n                    id: 'definitions_invocation',\n                    states:{\n                        prompt: { ...invoke_rasa('#definitions_choice')}\n                    }\n                },\n                definitions_choice:{\n                    initial: 'prompt',\n                    id: 'definitions_choice',\n                    on:{\n                        ENDSPEECH:[{\n                            cond: (context) => context.intentResult === 'Help',\n                            target: 'definitions_help'},\n                            {cond: (context) => context.intentResult === 'Quit',\n                            target: '#quit_game'},\n                            {cond: (context) => context.intentResult === 'Definitions',\n                            target: '#definitions_again'},\n                            {cond: (context) => context.intentResult === 'Wordplay',\n                            target: 'wordplay'},\n                            {cond: (context) => context.intentResult === 'Animals',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'definitions_pregame'},\n                            {cond: (context) => context.intentResult === 'Weekdays',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'definitions_pregame'},\n                            {cond: (context) => context.intentResult === 'Occupation',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'definitions_pregame'},\n                            {cond: (context) => context.intentResult === 'Colours',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'definitions_pregame'},\n                            {cond: (context) => context.intentResult === 'Verbs',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'definitions_pregame'},\n                            {cond: (context) => context.intentResult === 'Family',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'definitions_pregame'},\n                            {cond: (context) => context.intentResult === 'Geographical',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'definitions_pregame'},\n      \n                        {target:'.nomatch'}]\n                    },\n                    states: {\n                        prompt: {\n                            entry: send('ENDSPEECH')},\n                        nomatch: {\n                            entry: say(\"Unavailable right now.\"),\n                            on: {ENDSPEECH: '#welcome'}\n                                \n                            }\n                                \n                        }\n        \n                },\n                definitions_again:{\n                    id: 'definitions_again',\n                    on:{ENDSPEECH:[{\n                        actions: assign((context) => { return { task: context.recResult } }),\n                        target: '#definitions_invocation'}],\n                        TIMEOUT: '.timeout' },\n                    ...sayAskTimeout(say('You are already in the Definitions mode! Pick a category to start playing.'))\n    \n                },\n                definitions_help:{\n                    initial: 'prompt',\n                    id: 'definitions_help',\n                    on: {\n                        RECOGNISED:[{\n                            actions: assign((context) => { return { task: context.recResult } }),\n                            target: 'definitions_invocation'},\n                        \n                        {target: \".nomatch\"}]\n                    },\n                            ...sayAskTimeout(say(\"Definitions is a game where you will be given a definition in English and will have to say a\\\n                             corresponding word in Swedish. You can choose from seven categories: Animals, Weekdays, Occupations, Colours, Verbs,\\\n                            Family, and Nature Objects. Each category consists of seven words. Note that only answers in Swedish will be accepted.\\\n                            Where applicable, be mindful of articles! You can quit the game by saying quit at any point in the game. You may now pick\\\n                             a category or change to another game.\"))\n                },\n                definitions_quit:{\n                    initial: 'prompt',\n                    id: 'definitions_quit',\n                    on: {ENDSPEECH: '#welcome'},\n                   ...sayAskTimeout(say(\"Quitting definitions. Choose another game. \"))\n                },\n                definitions_pregame:{\n                    initial: 'prompt',\n                    on: {\n                        RECOGNISED: [{\n                            cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Animals\",\n                            target: \"#definitions_animals_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Weekdays\",\n                            target: \"#definitions_weekdays_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Occupation\",\n                            target: \"#definitions_occupations_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Colours\",\n                            target: \"#definitions_colours_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Verbs\",\n                            target: \"#definitions_verbs_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Family\",\n                            target: \"#definitions_family_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Grographical\",\n                            target: \"#definitions_geographical_begin\"},\n                            {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}),\n                            target: \"#quit_game\"},\n                        { target: \".nomatch\" }],\n                        ENDSPEECH: '.ask'\n                    },\n                    states: {\n                        prompt:\n                            {entry: send((context) => ({\n                                    type: \"SPEAK\",\n                             value: `You have chosen ${context.task}. Say start - if you wish to begin; or quit - if you wish to change the game or the mode. Remember to speak in Swedish.`})),\n                              on: {ENDSPEECH: 'ask'}},\n                        nomatch:{\n                            entry: say('Sorry, I did not quite catch that. Please repeat'),\n                            on: {ENDSPEECH: 'ask'},\n                        },\n                        ask: {\n                            entry: listen()\n                }}},\n\n/*=========================================================================DEFINITIONS ANIMALS===============================================================================================*/                \n\n            definitions_animals_begin:{\n            initial: 'prompt',\n            id: 'definitions_animals_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_cat\" in (animalsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"cat\" in (animalsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')],  target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: [cancel('timer2'), cancel('timer')], target:'.nomatch'}],\n                    NEXT_STATE: {actions: [cancel('timer2'), cancel('timer')], target: '#definitions_dog'},\n                    SKIP_STATE: {actions: [cancel('timer2'), cancel('timer')], target: '#definitions_dog'},\n                    TIMEOUT: {actions: [cancel('timer2'), cancel('timer')], target:'.timeout'}\n            },\n            ...Say_play(say(game_vocab.animals.cat.definition))},\n\n            definitions_dog:{\n            initial: 'prompt',\n            id: 'definitions_dog',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_dog\" in (animalsGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"dog\" in (animalsGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: [cancel('timer2'), cancel('timer')], target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_fox'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_fox'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.dog.definition))\n        },\n        definitions_fox:{\n            initial: 'prompt',\n            id: 'definitions_fox',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_fox\" in (animalsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"fox\" in (animalsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_sheep'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_sheep'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.fox.definition))\n            },    \n        definitions_sheep:{\n            initial: 'prompt',\n            id: 'definitions_sheep',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"ett_sheep\" in (animalsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"sheep\" in (animalsGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target:  '#definitions_giraffe'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_giraffe'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.sheep.definition))\n        },          \n        definitions_giraffe:{\n            initial: 'prompt',\n            id: 'definitions_giraffe',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_giraffe\" in (animalsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"giraffe\" in (animalsGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: cancel('timer2'),  target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_crocodile'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_crocodile'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.giraffe.definition))\n        },   \n        definitions_crocodile:{\n            initial: 'prompt',\n            id: 'definitions_crocodile',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_crocodile\" in (animalsGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"crocodile\" in (animalsGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_peacock'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_peacock'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.crocodile.definition))\n        },      \n        definitions_peacock:{\n            initial: 'prompt',\n            id: 'definitions_peacock',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_peacock\" in (animalsGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"peacock\" in (animalsGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.animals.peacock.definition))\n        },\n\n        /* ==================================================================== DEFINITIONS WEEKDAYS =================================================================================*/\n        definitions_weekdays_begin:{\n            initial: 'prompt',\n            id: 'definitions_weekdays_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Monday\" in (weekdaysGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_tuesday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_tuesday'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Monday.definition))},\n        \n        definitions_tuesday:{\n            initial: 'prompt',\n            id: 'definitions_tuesday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Tuesday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_wednesday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_wednesday'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Tuesday.definition))\n        },\n\n        definitions_wednesday:{\n            initial: 'prompt',\n            id: 'definitions_wednesday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Wednesday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_thursday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_thursday'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Wednesday.definition))\n        },\n\n        definitions_thursday:{\n            initial: 'prompt',\n            id: 'definitions_thursday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Thursday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_friday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_friday'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Thursday.definition))\n        },\n\n        definitions_friday:{\n            initial: 'prompt',\n            id: 'definitions_friday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Friday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_saturday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_saturday'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Friday.definition))\n        },\n\n        definitions_saturday:{\n            initial: 'prompt',\n            id: 'definitions_saturday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Saturday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_sunday'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_sunday'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Saturday.definition))\n        },\n\n        definitions_sunday:{\n            initial: 'prompt',\n            id: 'definitions_sunday',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"Sunday\" in (weekdaysGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: cancel('timer2'), target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target: '.timeout'}\n        },\n        ...Say_play(say(game_vocab.weekdays.Sunday.definition))\n        },\n\n/* ==================================================================== DEFINITIONS OCCUPATIONS =================================================================================*/\n        definitions_occupations_begin:{\n            initial: 'prompt',\n            id: 'definitions_occupations_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_teacher\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"teacher\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_doctor'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_doctor'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.teacher.definition))},\n\n        definitions_doctor:{\n            initial: 'prompt',\n            id: 'definitions_doctor',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_doctor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"doctor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_builder'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_builder'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.doctor.definition))},\n\n        definitions_builder:{\n            initial: 'prompt',\n            id: 'definitions_builder',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_builder\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"builder\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_lifeguard'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_lifeguard'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.builder.definition))},\n\n        definitions_lifeguard:{\n            initial: 'prompt',\n            id: 'definitions_lifeguard',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_lifeguard\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"lifeguard\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_actor'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_actor'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.lifeguard.definition))},\n\n        definitions_actor:{\n            initial: 'prompt',\n            id: 'definitions_actor',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_actor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"actor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_engineer'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_engineer'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.actor.definition))},\n\n        definitions_engineer:{\n            initial: 'prompt',\n            id: 'definitions_engineer',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_engineer\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"engineer\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_garbage_man'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_garbage_man'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.engineer.definition))},\n\n        definitions_garbage_man:{\n            initial: 'prompt',\n            id: 'definitions_garbage_man',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_garbage_man\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"garbage_man\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.occupation.garbage_man.definition))},\n\n/* ==================================================================== DEFINITIONS COLOURS =================================================================================*/\n        definitions_colours_begin:{\n            initial: 'prompt',\n            id: 'definitions_colours_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"yellow\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_red'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_red'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.yellow.definition))},\n\n        definitions_red:{\n            initial: 'prompt',\n            id: 'definitions_red',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"red\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_purple'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_purple'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.red.definition))},\n\n        definitions_purple:{\n            initial: 'prompt',\n            id: 'definitions_purple',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"purple\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_brown'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_brown'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.purple.definition))},\n\n        definitions_brown:{\n            initial: 'prompt',\n            id: 'definitions_brown',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"brown\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_black'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_black'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.brown.definition))},\n\n        definitions_black:{\n            initial: 'prompt',\n            id: 'definitions_black',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"black\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_white'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_white'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.black.definition))},\n\n        definitions_white:{\n            initial: 'prompt',\n            id: 'definitions_white',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"white\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_green'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_green'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.white.definition))},\n\n        definitions_green:{\n            initial: 'prompt',\n            id: 'definitions_green',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"green\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.colours.green.definition))},\n\n        /* ==================================================================== DEFINITIONS VERBS =================================================================================*/\n        definitions_verbs_begin:{\n            initial: 'prompt',\n            id: 'definitions_verbs_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"go\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_run'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_run'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.go.definition))},\n\n        definitions_run:{\n            initial: 'prompt',\n            id: 'definitions_run',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"run\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_eat'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_eat'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.run.definition))},\n\n        definitions_eat:{\n            initial: 'prompt',\n            id: 'definitions_eat',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"eat\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_sleep'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_sleep'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.eat.definition))},\n\n        definitions_sleep:{\n            initial: 'prompt',\n            id: 'definitions_sleep',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"sleep\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_write'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_write'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.sleep.definition))},\n\n        definitions_write:{\n            initial: 'prompt',\n            id: 'definitions_write',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"write\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_sing'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_sing'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.write.definition))},\n\n        definitions_sing:{\n            initial: 'prompt',\n            id: 'definitions_sing',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"sing\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_drink'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_drink'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.sing.definition))},\n\n        definitions_drink:{\n            initial: 'prompt',\n            id: 'definitions_drink',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"drink\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.verbs.drink.definition))},\n\n        /* ===================================================== DEFINITIONS FAMILY ===================================================================================================*/\n        definitions_family_begin:{\n            initial: 'prompt',\n            id: 'definitions_family_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_cousin\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"cousin\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_brother'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_brother'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.cousin.definition))},\n\n        definitions_brother:{\n            initial: 'prompt',\n            id: 'definitions_brother',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_brother\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"brother\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_sister'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_sister'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.brother.definition))},\n\n        definitions_sister:{\n            initial: 'prompt',\n            id: 'definitions_sister',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_sister\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"sister\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_mum'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_mum'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.sister.definition))},\n\n        definitions_mum:{\n            initial: 'prompt',\n            id: 'definitions_mum',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_mum\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"mum\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_dad'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_dad'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.mum.definition))},\n\n        definitions_dad:{\n            initial: 'prompt',\n            id: 'definitions_dad',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_dad\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"dad\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_grandma_1'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_grandma_1'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.dad.definition))},\n\n        definitions_grandma_1:{\n            initial: 'prompt',\n            id: 'definitions_grandma_1',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_grandma_1\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"grandma_1\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_grandma_2'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_grandma_2'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.grandma_1.definition))},\n\n        definitions_grandma_2:{\n            initial: 'prompt',\n            id: 'definitions_grandma_2',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_grandma_2\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"grandma_2\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.family.grandma_2.definition))},\n\n        /* ===================================================== DEFINITIONS GEOGRAPHICAL  ===================================================================================================*/\n        definitions_geographical_begin:{\n            initial: 'prompt',\n            id: 'definitions_geographical_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_river\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"river\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_mountain'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_mountain'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.river.definition))},\n\n        definitions_mountain:{\n            initial: 'prompt',\n            id: 'definitions_mountain',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"ett_mountain\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"mountain\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_sea'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_sea'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.mountain.definition))},\n\n        definitions_sea:{\n            initial: 'prompt',\n            id: 'definitions_sea',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"ett_sea\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"sea\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_forest'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_forest'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.sea.definition))},\n\n        definitions_forest:{\n            initial: 'prompt',\n            id: 'definitions_forest',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_forest\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"forest\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_lake'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_lake'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.forest.definition))},\n\n        definitions_lake:{\n            initial: 'prompt',\n            id: 'definitions_lake',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_lake\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"lake\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_cliff'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_cliff'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.lake.definition))},\n\n        definitions_cliff:{\n            initial: 'prompt',\n            id: 'definitions_cliff',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_cliff\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"cliff\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_cave'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_cave'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.cliff.definition))},\n\n        definitions_cave:{\n            initial: 'prompt',\n            id: 'definitions_cave',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_cave\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"cave\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer')], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#definitions_summary'},\n                    TIMEOUT: {actions: cancel('timer2'), target:'.timeout'}\n        },\n        ...Say_play(say(game_vocab.geographical.cave.definition))},\n\n/* ==================================================================== DEFINITIONS SUMMARY =================================================================================*/\n        \n                                definitions_summary:{\n                                    initial: 'prompt',\n                                    id: 'definitions_summary',\n                                    on: {RECOGNISED:[\n                                        {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                                        actions: [cancel('timer2'), cancel('timer')], target:'#definitions' },\n                                        {cond: (context) => \"change_game\" in (gameGrammar[context.recResult] || {}), \n                                        actions: [cancel('timer2'), cancel('timer')], target:'#which_game' },\n                                        {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}),\n                                        actions: [cancel('timer2'), cancel('timer')],  target:'#exit_app' }, \n                                        {target:'.nomatch'}]},\n                                   ...sayAskTimeout(send((context) => ({\n                                    type: \"SPEAK\",\n                                    value: `Well done! Your current score is ${context.score} points. Would you like to play Definitions again, or try some other game?`})))\n    \n                },\n\n            pictures: {\n                initial: 'prompt',\n                id: 'pictures',\n                on: {\n                    RECOGNISED:[{\n                        actions: assign((context) => { return { task: context.recResult } }),\n                        target: '#pictures_invocation'}],\n                        TIMEOUT: '.timeout'\n                },\n                        ...sayAskTimeout(say(\"Pictures! Pick a category and let's start.\"))\n    \n            },\n                pictures_invocation:{\n                    initial: 'prompt',\n                    id: 'pictures_invocation',\n                    states:{\n                        prompt: { ...invoke_rasa('#pictures_choice')}\n                    }\n                },\n                pictures_choice:{\n                    initial: 'prompt',\n                    id: 'pictures_choice',\n                    on:{\n                        ENDSPEECH:[{\n                            cond: (context) => context.intentResult === 'Help',\n                            target: 'pictures_help'},\n                            {cond: (context) => context.intentResult === 'Quit',\n                            target: '#quit_game'},\n                            {cond: (context) => context.intentResult === 'Definitions',\n                            target: '#definitions'},\n                            {cond: (context) => context.intentResult === 'Wordplay',\n                            target: '#wordplay'},\n                            {cond: (context) => context.intentResult === 'Pictures',\n                            target: '#pictures_again'},\n                            {cond: (context) => context.intentResult === 'Animals',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'pictures_pregame'},\n                            {cond: (context) => context.intentResult === 'Weekdays',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'pictures_pregame'},\n                            {cond: (context) => context.intentResult === 'Occupation',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'pictures_pregame'},\n                            {cond: (context) => context.intentResult === 'Colours',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'pictures_pregame'},\n                            {cond: (context) => context.intentResult === 'Verbs',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'pictures_pregame'},\n                            {cond: (context) => context.intentResult === 'Family',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'pictures_pregame'},\n                            {cond: (context) => context.intentResult === 'Geographical',\n                            actions: assign((context) => { return { game_category: context.recResult} }),\n                            target: 'pictures_pregame'},\n\n        \n                        {target:'.nomatch'}]\n                    },\n                    states: {\n                        prompt: {\n                            entry: send('ENDSPEECH')},\n                        nomatch: {\n                            entry: say(\"Unavailable right now.\"),\n                            on: {ENDSPEECH: '#welcome'}\n                                \n                            }\n                                \n                        }\n        \n                },\n                pictures_again:{\n                    id: 'pictures_again',\n                    on:{ENDSPEECH:[{\n                        actions: assign((context) => { return { task: context.recResult } }),\n                        target: '#pictures_invocation'}],\n                        TIMEOUT: '.timeout' },\n                    ...sayAskTimeout(say('You are already in the Pictures mode! Pick a category to start playing.'))\n    \n                },\n                pictures_help:{\n                    initial: 'prompt',\n                    id: 'pictures_help',\n                    on: {\n                        RECOGNISED:[{\n                            actions: assign((context) => { return { task: context.recResult } }),\n                            target: 'pictures_invocation'},\n                        \n                        {target: \".nomatch\"}]\n                    },\n                            ...sayAskTimeout(say(\"Pictures is a game where you will be shown a picture and will have to say the Swedish word for it. You can choose from seven categories:\\\n                            Animals, Weekdays, Occupations, Colours, Verbs, Family, and Nature Objects. Each category consists of seven words. Note that only answers in Swedish will be accepted.\\\n                            Where applicable, be mindful of articles! You can quit the game by saying quit at any point in the game. You may now pick a category or change another game.\"))\n                },\n                pictures_quit:{\n                    initial: 'prompt',\n                    id: 'pictures_quit',\n                    on: {ENDSPEECH: '#welcome'},\n                    ...sayAskTimeout(say(\"Quitting Pictures. Choose another game. \"))\n                },\n                pictures_pregame:{\n                    initial: 'prompt',\n                    id: 'pictures_pregame',\n                    on: {\n                        RECOGNISED: [{\n                            cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Animals\",\n                            actions: [cancel('timer'), cancel('timer2'), assign((context) => {return { picture: cat}})],\n                            target: \"#pictures_animals_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Weekdays\",\n                            actions: [cancel('timer'), cancel('timer2'), assign((context) => {return { picture: Monday}})],\n                            target: \"#pictures_weekdays_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Occupation\",\n                            actions: [cancel('timer'), cancel('timer2'), assign((context) => {return { picture: teacher}})],\n                            target: \"#pictures_occupations_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Colours\",\n                            actions: [cancel('timer'), cancel('timer2'), assign((context) => {return { picture: yellow}})],\n                            target: \"#pictures_colours_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Verbs\",\n                            actions: [cancel('timer'), cancel('timer2'), assign((context) => {return { picture: go}})],\n                            target: \"#pictures_verbs_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Family\",\n                            actions: [cancel('timer'), cancel('timer2'), assign((context) => {return { picture: cousin}})],\n                            target: \"#pictures_family_begin\"},\n                            {cond: (context) => \"start\" in (gameGrammar[context.recResult] || {}) && context.intentResult === \"Grographical\",\n                            actions: [cancel('timer'), cancel('timer2'), assign((context) => {return { picture: river}})],\n                            target: \"#pictures_geographical_begin\"},\n\n                            {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}),\n                            target: \"#quit_game\"},\n                        { target: \".nomatch\" }],\n                        ENDSPEECH: '.ask'\n                    },\n                    states: {\n                        prompt:\n                        {entry: send((context) => ({\n                            type: \"SPEAK\",\n                            value: `You have chosen ${context.task}. Say start - if you wish to begin; or quit - if you wish to change the game or the mode.`})),\n                        on: {ENDSPEECH: 'ask'}},\n                        nomatch:{\n                            entry: say('Sorry, I did not quite catch that. Please repeat'),\n                            on: {ENDSPEECH: 'ask'},\n                        },\n                        ask: {\n                            entry: listen()\n                        }\n                    }\n                },\n\n/* ===================================================== PICTURES ANIMALS ===================================================================================================*/\n\n                pictures_animals_begin:{\n                    initial: 'prompt',\n                    id: 'pictures_animals_begin',\n                    on: {   RECOGNISED:[\n                        {cond: (context) => \"en_cat\" in (animalsGrammar[context.recResult] || {}), \n                        actions: [cancel('timer'), cancel('timer2'), assign((context) => {return { picture: dog, score: (context.score || 0)+1 }})], target: '.match'},\n                        {cond: (context) => \"cat\" in (animalsGrammar[context.recResult] || {}), \n                        actions: [cancel('timer'), cancel('timer2')],  target: '.almost'},\n                        {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                        actions: [cancel('timer'),cancel('timer2'),  assign((context) => {return { picture: dog}})],  target: '.skip_to_next'},\n                        {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                        actions: [assign((context) => {return {picture: Background}}), cancel('timer')], target: '#quit_game'},\n    \n                        {target:'.nomatch'}],\n                            NEXT_STATE: {target: '#pictures_dog'},\n                            SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_dog'},\n                            SHOW: {target: '.show'},\n                },\n                ...Show_play()},\n\n            pictures_dog:{\n                initial: 'prompt',\n                id: 'pictures_dog',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"en_dog\" in (animalsGrammar[context.recResult] || {}),\n                    actions: [assign((context) => {return { picture: fox, score: (context.score || 0)+1 }})], target: '.match',},\n                    {cond: (context) => \"dog\" in (animalsGrammar[context.recResult] || {}),\n                    target: '.almost'},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return { picture: fox}})],target: '.skip_to_next'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return {picture: Background}})], target: '#quit_game'},\n    \n                    {target:'.nomatch'}],\n                        NEXT_STATE: {target: '#pictures_fox'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_fox'},\n                        SHOW: {target: '.show'}\n            },\n            ...Show_play()\n        },\n            pictures_fox:{\n                initial: 'prompt',\n                id: 'pictures_fox',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"en_fox\" in (animalsGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return { picture: sheep, score: (context.score || 0)+1 }})], target: '.match',},\n                    {cond: (context) => \"fox\" in (animalsGrammar[context.recResult] || {}), \n                    target: '.almost',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                    actions: [assign((context) => {return { picture: sheep}})], target: '.skip_to_next'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return {picture: Background}})], target: '#quit_game'},\n    \n                    {target:'.nomatch'}],\n                        NEXT_STATE: {target: '#pictures_sheep'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_sheep'},\n                        SHOW: {target: '.show'}\n            },\n            ...Show_play()\n        },    \n            pictures_sheep:{\n                initial: 'prompt',\n                id: 'pictures_sheep',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"ett_sheep\" in (animalsGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return { picture: giraffe, score: (context.score || 0)+1}})], target: '.match',},\n                    {cond: (context) => \"sheep\" in (animalsGrammar[context.recResult] || {}), \n                    target: '.almost',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return { picture: giraffe}})], target: '.skip_to_next'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return {picture: Background}})], target: '#quit_game'},\n    \n                    {target:'.nomatch'}],\n                        NEXT_STATE: {target:  '#pictures_giraffe'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_giraffe'},\n                        SHOW: {target: '.show'}\n            },\n            ...Show_play()\n        },          \n            pictures_giraffe:{\n                initial: 'prompt',\n                id: 'pictures_giraffe',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"en_giraffe\" in (animalsGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return { picture: crocodile, score: (context.score || 0)+1}})], target: '.match',},\n                    {cond: (context) => \"giraffe\" in (animalsGrammar[context.recResult] || {}), \n                    target: '.almost',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                    actions: [assign((context) => {return { picture: crocodile}})],  target: '.skip_to_next'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return {picture: Background}})], target: '#quit_game'},\n    \n                    {target:'.nomatch'}],\n                        NEXT_STATE: {target: '#pictures_crocodile'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_crocodile'},\n                        SHOW: {target: '.show'}\n            },\n            ...Show_play()\n        },   \n            pictures_crocodile:{\n                initial: 'prompt',\n                id: 'pictures_crocodile',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"en_crocodile\" in (animalsGrammar[context.recResult] || {}),\n                    actions: [assign((context) => {return { picture: peacock, score: (context.score || 0)+1}})],  target: '.match',},\n                    {cond: (context) => \"crocodile\" in (animalsGrammar[context.recResult] || {}), \n                    target: '.almost',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return { picture: peacock}})], target: '.skip_to_next'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return {picture: Background}})], target: '#quit_game'},\n    \n                    {target:'.nomatch'}],\n                        NEXT_STATE: {target: '#pictures_peacock'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_peacock'},\n                        SHOW: {target: '.show'}\n            },\n            ...Show_play()\n        },  \n\n            pictures_peacock:{\n                initial: 'prompt',\n                id: 'pictures_peacock',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"en_peacock\" in (animalsGrammar[context.recResult] || {}),\n                    actions: [assign((context) => {return {picture: Background, score: (context.score || 0)+1}})],  target: '.match',},\n                    {cond: (context) => \"peacock\" in (animalsGrammar[context.recResult] || {}), \n                     target: '.almost',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                    actions: [assign((context) => {return {picture: Background}})], target: '.skip_to_next'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return {picture: Background}})],\n                    target: '#quit_game'},\n    \n                    {target:'.nomatch'}],\n                        NEXT_STATE: {target: '#pictures_summary'},\n                        SKIP_STATE: {target: '#pictures_summary'},\n                        SHOW: {target: '.show'}\n            },\n            ...Show_play()},\n            \n\n/* ==================================================================== PICTURES WEEKDAYS =================================================================================*/\n            pictures_weekdays_begin:{\n                initial: 'prompt',\n                id: 'pictures_weekdays_begin',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"Monday\" in (weekdaysGrammar[context.recResult] || {}), \n                    actions: [assign((context) => {return {picture: Tuesday, score: (context.score || 0)+1}})],  target: '.match',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                    actions: [assign((context) => {return { picture: Tuesday}})], target: '.skip_to_next'},\n                    {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                    {actions: cancel('timer2'), target:'.nomatch'}],\n\n                        NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_tuesday'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_tuesday'},\n                        SHOW: {target: '.show'}\n            },\n            ...Show_play()},\n\n            pictures_tuesday:{\n                initial: 'prompt',\n                id: 'pictures_tuesday',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"Tuesday\" in (weekdaysGrammar[context.recResult] || {}),\n                    actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return {picture: Wednesday, score: (context.score || 0)+1 } })],  target: '.match',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), assign((context)=>{ return {picture: Wednesday} })], target: '.skip_to_next'},\n                    {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                    {actions: cancel('timer2'), target:'.nomatch'}],\n                        NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_wednesday'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_wednesday'},\n                        SHOW: {target: '.show'}\n\n            },\n            ...Show_play()},\n\n            pictures_wednesday:{\n                initial: 'prompt',\n                id: 'pictures_wednesday',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"Wednesday\" in (weekdaysGrammar[context.recResult] || {}),\n                    actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return {picture: Thursday, score: (context.score || 0)+1 } })],  target: '.match',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), assign((context)=>{ return {picture: Thursday} })], target: '.skip_to_next'},\n                    {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                    {actions: cancel('timer2'), target:'.nomatch'}],\n                        NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_thursday'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_thursday'},\n                        SHOW: {target: '.show'}\n\n            },\n            ...Show_play()},\n\n\n            pictures_thursday:{\n                initial: 'prompt',\n                id: 'pictures_thursday',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"Thursday\" in (weekdaysGrammar[context.recResult] || {}),\n                    actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return {picture: Friday, score: (context.score || 0)+1 } })],  target: '.match',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), assign((context)=>{ return {picture: Friday} })], target: '.skip_to_next'},\n                    {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                    {actions: cancel('timer2'), target:'.nomatch'}],\n                        NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_friday'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_friday'},\n                        SHOW: {target: '.show'}\n\n            },\n            ...Show_play()},\n\n            pictures_friday:{\n                initial: 'prompt',\n                id: 'pictures_friday',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"Friday\" in (weekdaysGrammar[context.recResult] || {}),\n                    actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return {picture: Saturday, score: (context.score || 0)+1 } })],  target: '.match',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), assign((context)=>{ return {picture: Saturday} })], target: '.skip_to_next'},\n                    {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                    {actions: cancel('timer2'), target:'.nomatch'}],\n                        NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_saturday'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_saturday'},\n                        SHOW: {target: '.show'}\n\n            },\n            ...Show_play()},\n\n            pictures_saturday:{\n                initial: 'prompt',\n                id: 'pictures_saturday',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"Saturday\" in (weekdaysGrammar[context.recResult] || {}),\n                    actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return {picture: Sunday, score: (context.score || 0)+1 } })],  target: '.match',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), assign((context)=>{ return {picture: Sunday} })], target: '.skip_to_next'},\n                    {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                    {actions: cancel('timer2'), target:'.nomatch'}],\n                        NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_sunday'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_sunday'},\n                        SHOW: {target: '.show'}\n            },\n            ...Show_play()},\n\n            pictures_sunday:{\n                initial: 'prompt',\n                id: 'pictures_sunday',\n                on: {   RECOGNISED:[\n                    {cond: (context) => \"Sunday\" in (weekdaysGrammar[context.recResult] || {}),\n                    actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return {picture: Background, score: (context.score || 0)+1 } })],  target: '.match',},\n                    {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), assign((context)=>{ return {picture: Background} })], target: '.skip_to_next'},\n                    {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                    {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                    actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                    {actions: cancel('timer2'), target:'.nomatch'}],\n                        NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                        SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                        SHOW: {target: '.show'}\n            },\n            ...Show_play()},\n\n            /* ==================================================================== PICTURES OCCUPATIONS =================================================================================*/\n        pictures_occupations_begin:{\n            initial: 'prompt',\n            id: 'pictures_occupations_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_teacher\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return {picture: doctor, score: (context.score || 0)+1 } })],  target: '.match',},\n                {cond: (context) => \"teacher\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')],  target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), assign((context)=>{ return {picture: doctor} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_doctor'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_doctor'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_doctor:{\n            initial: 'prompt',\n            id: 'pictures_doctor',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_doctor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: builder, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"doctor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: builder} }) ], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_builder'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_builder'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_builder:{\n            initial: 'prompt',\n            id: 'pictures_builder',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_builder\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: lifeguard, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"builder\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: lifeguard} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_lifeguard'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_lifeguard'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_lifeguard:{\n            initial: 'prompt',\n            id: 'pictures_lifeguard',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_lifeguard\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: actor, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"lifeguard\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: actor} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_actor'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_actor'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_actor:{\n            initial: 'prompt',\n            id: 'pictures_actor',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_actor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: engineer, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"actor\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: engineer} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_engineer'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_engineer'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_engineer:{\n            initial: 'prompt',\n            id: 'pictures_engineer',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_engineer\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: garbage_man, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"engineer\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: garbage_man} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_garbage_man'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_garbage_man'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_garbage_man:{\n            initial: 'prompt',\n            id: 'pictures_garbage_man',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_garbage_man\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: Background, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"garbage_man\" in (occupationsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: Background} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n/* ==================================================================== PICTURES COLOURS =================================================================================*/\n        pictures_colours_begin:{\n            initial: 'prompt',\n            id: 'pictures_colours_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"yellow\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: red, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: red} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_red'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_red'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_red:{\n            initial: 'prompt',\n            id: 'pictures_red',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"red\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: purple, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: purple} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_purple'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_purple'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_purple:{\n            initial: 'prompt',\n            id: 'pictures_purple',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"purple\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: brown, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: brown} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_brown'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_brown'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_brown:{\n            initial: 'prompt',\n            id: 'pictures_brown',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"brown\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: black, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: black} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_black'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_black'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_black:{\n            initial: 'prompt',\n            id: 'pictures_black',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"black\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: white, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: white} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_white'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_white'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_white:{\n            initial: 'prompt',\n            id: 'pictures_white',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"white\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: green, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: green} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_green'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_green'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_green:{\n            initial: 'prompt',\n            id: 'pictures_green',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"green\" in (coloursGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: Background, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: Background} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        /* ==================================================================== PICTURES VERBS =================================================================================*/\n        pictures_verbs_begin:{\n            initial: 'prompt',\n            id: 'pictures_verbs_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"go\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: run, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: run} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_run'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_run'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_run:{\n            initial: 'prompt',\n            id: 'pictures_run',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"run\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: eat, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: eat} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_eat'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_eat'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_eat:{\n            initial: 'prompt',\n            id: 'pictures_eat',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"eat\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: sleep, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: sleep} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_sleep'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_sleep'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_sleep:{\n            initial: 'prompt',\n            id: 'pictures_sleep',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"sleep\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: write, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: write} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_write'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_write'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_write:{\n            initial: 'prompt',\n            id: 'pictures_write',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"write\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: sing, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: sing} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_sing'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_sing'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_sing:{\n            initial: 'prompt',\n            id: 'pictures_sing',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"sing\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: drink, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: drink} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_drink'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_drink'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_drink:{\n            initial: 'prompt',\n            id: 'pictures_drink',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"drink\" in (verbsGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: Background, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: Background} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n/* ===================================================== PICTURES FAMILY ===================================================================================================*/\n        pictures_family_begin:{\n            initial: 'prompt',\n            id: 'pictures_family_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_cousin\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: brother, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"cousin\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: brother} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_brother'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_brother'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_brother:{\n            initial: 'prompt',\n            id: 'pictures_brother',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_brother\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: sister, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"brother\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: sister} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_sister'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_sister'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_sister:{\n            initial: 'prompt',\n            id: 'pictures_sister',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_sister\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: mum, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"sister\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: mum} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_mum'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_mum'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_mum:{\n            initial: 'prompt',\n            id: 'pictures_mum',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_mum\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: dad, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"mum\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: dad} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_dad'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_dad'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_dad:{\n            initial: 'prompt',\n            id: 'pictures_dad',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_dad\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: grandma_1, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"dad\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: grandma_1} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_grandma_1'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_grandma_1'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_grandma_1:{\n            initial: 'prompt',\n            id: 'pictures_grandma_1',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_grandma_1\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: grandma_2, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"grandma_1\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: grandma_2} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_grandma_2'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_grandma_2'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_grandma_2:{\n            initial: 'prompt',\n            id: 'pictures_grandma_2',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_grandma_2\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: Background, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"grandma_2\" in (familyGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: Background} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        /* ===================================================== PICTURES GEOGRAPHICAL  ===================================================================================================*/\n        pictures_geographical_begin:{\n            initial: 'prompt',\n            id: 'pictures_geographical_begin',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_river\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: mountain, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"river\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: mountain} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_mountain'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_mountain'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_mountain:{\n            initial: 'prompt',\n            id: 'pictures_mountain',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"ett_mountain\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: sea, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"mountain\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: sea} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_sea'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_sea'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_sea:{\n            initial: 'prompt',\n            id: 'pictures_sea',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"ett_sea\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: forest, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"sea\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: forest} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_forest'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_forest'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_forest:{\n            initial: 'prompt',\n            id: 'pictures_forest',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_forest\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: lake, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"forest\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: lake} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_lake'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_lake'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_lake:{\n            initial: 'prompt',\n            id: 'pictures_lake',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_lake\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: cliff, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"lake\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: cliff} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_cliff'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_cliff'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_cliff:{\n            initial: 'prompt',\n            id: 'pictures_cliff',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_cliff\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: cave, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"cliff\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: cave} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_cave'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_cave'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n\n        pictures_cave:{\n            initial: 'prompt',\n            id: 'pictures_cave',\n            on: {   RECOGNISED:[\n                {cond: (context) => \"en_cave\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context)=>{ return { picture: Background, score: (context.score || 0)+1 } })], target: '.match',},\n                {cond: (context) => \"cave\" in (geographicalGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.almost',},\n                {cond: (context) => \"skip\" in (gameGrammar[context.recResult] || {}),\n                actions: [cancel('timer2'), cancel('timer'),assign((context)=>{ return {picture: Background} })], target: '.skip_to_next'},\n                {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer')], target: '.prompt'},\n                {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}), \n                actions: [cancel('timer2'), cancel('timer'), assign((context) => {return {picture: Background}})], target: '#quit_game'},\n\n                {actions: cancel('timer2'), target:'.nomatch'}],\n\n                    NEXT_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                    SKIP_STATE: {actions: cancel('timer2'), target: '#pictures_summary'},\n                    SHOW: {target: '.show'}\n        },\n        ...Show_play()},\n        \n                                pictures_summary:{\n                                    initial: 'prompt',\n                                    id: 'pictures_summary',\n                                    on: {RECOGNISED:[\n                                        {cond: (context) => \"repeat\" in (gameGrammar[context.recResult] || {}), \n                                        actions: [cancel('timer2'), cancel('timer')], target:'#pictures' },\n                                        {cond: (context) => \"change_game\" in (gameGrammar[context.recResult] || {}), \n                                        actions: [cancel('timer2'), cancel('timer')], target:'#which_game' },\n                                        {cond: (context) => \"quit\" in (gameGrammar[context.recResult] || {}),\n                                        actions: [cancel('timer2'), cancel('timer')],  target:'#exit_app' }, \n                                        {target:'.nomatch'}]},\n                                   ...sayAskTimeout(send((context) => ({\n                                    type: \"SPEAK\",\n                                    value: `Well done! Your current score is ${context.score} points. Would you like to guess pictures again, or try some other game?`})))\n        \n        \n                    },\n\n\n        quit_game:{\n            initial: 'prompt',\n            id:'quit_game',\n            on: {ENDSPEECH: '#which_game'},\n            states: {\n                prompt:{entry: say('Exiting current game.')\n\n                }\n            }\n        },\n        exit_app:{\n            id: 'exit_app',\n            on: {ENDSPEECH: '#idle'},\n            entry: say('Thank you for playing and have a nice day!')\n        }\n}})\n\nimport Background from \"./Pictures_game/Background.jpg\";\nimport cat from \"./Pictures_game/cat.jpg\";\nimport dog from \"./Pictures_game/dog.jpeg\";\nimport fox from \"./Pictures_game/fox.jpg\";\nimport sheep from \"./Pictures_game/sheep.jpg\";\nimport giraffe from \"./Pictures_game/giraffe.jpeg\";\nimport crocodile from \"./Pictures_game/crocodile.jpg\";\nimport peacock from \"./Pictures_game/peacock.jpg\";\n\nimport Monday from \"./Pictures_game/Monday.jpg\";\nimport Tuesday from \"./Pictures_game/Tuesday.jpg\";\nimport Wednesday from \"./Pictures_game/Wednesday.jpeg\";\nimport Thursday from \"./Pictures_game/Thursday.jpg\";\nimport Friday from \"./Pictures_game/Friday.jpg\";\nimport Saturday from \"./Pictures_game/Saturday.jpg\";\nimport Sunday from \"./Pictures_game/Sunday.jpg\";\n\nimport teacher from \"./Pictures_game/Teacher.jpeg\";\nimport doctor from \"./Pictures_game/Doctor.png\";\nimport builder from \"./Pictures_game/Builder.jpg\";\nimport lifeguard from \"./Pictures_game/Lifeguard.jpg\";\nimport actor from \"./Pictures_game/Actor.jpg\";\nimport engineer from \"./Pictures_game/Engineer.png\";\nimport garbage_man from \"./Pictures_game/Garbage_man.jpeg\";\n\nimport yellow from \"./Pictures_game/yellow.jpg\";\nimport red from \"./Pictures_game/red.jpg\";\nimport purple from \"./Pictures_game/purple.png\";\nimport brown from \"./Pictures_game/brown.jpg\";\nimport black from \"./Pictures_game/black.jpg\";\nimport white from \"./Pictures_game/white.jpg\";\nimport green from \"./Pictures_game/green.jpg\";\n\nimport go from \"./Pictures_game/go.png\";\nimport run from \"./Pictures_game/run.jpg\";\nimport eat from \"./Pictures_game/eat.jpg\";\nimport sleep from \"./Pictures_game/sleep.jpg\";\nimport write from \"./Pictures_game/write.jpg\";\nimport sing from \"./Pictures_game/sing.jpg\";\nimport drink from \"./Pictures_game/drink.jpg\";\n\nimport cousin from \"./Pictures_game/cousin.jpg\";\nimport brother from \"./Pictures_game/brother.jpeg\";\nimport sister from \"./Pictures_game/sister.jpg\";\nimport mum from \"./Pictures_game/mother.jpg\";\nimport dad from \"./Pictures_game/dad.jpg\";\nimport grandma_1 from \"./Pictures_game/grandma_1.jpg\";\nimport grandma_2 from \"./Pictures_game/grandma_2.jpg\";\n\nimport river from \"./Pictures_game/river.png\";\nimport mountain from \"./Pictures_game/mountain.jpg\";\nimport sea from \"./Pictures_game/sea.jpg\";\nimport forest from \"./Pictures_game/forest.jpg\";\nimport lake from \"./Pictures_game/lake.jpg\";\nimport cliff from \"./Pictures_game/cliff.jpg\";\nimport cave from \"./Pictures_game/cave.jpg\";\n","import \"./styles.scss\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Machine, assign, send, State } from \"xstate\";\nimport { useMachine, asEffect } from \"@xstate/react\";\nimport { inspect } from \"@xstate/inspect\";\nimport { dmMachine } from \"./dmSwenglish\";\nimport Background from \"./Pictures_game/Background.jpg\";\n\n\n/*inspect({\n    url: \"https://statecharts.io/inspect\",\n    iframe: false\n});\n*/\n\nimport { useSpeechSynthesis, useSpeechRecognition } from 'react-speech-kit';\n\nlet counterScore = 0\nlet counterTimeout = 0\n\nconst machine = Machine<SDSContext, any, SDSEvent>({\n    id: 'root',\n    type: 'parallel',\n    states: {\n        dm: {\n            ...dmMachine\n        },\n        asrtts: {\n            initial: 'idle',\n            states: {\n                idle: {\n                    on: {\n                        LISTEN: 'recognising',\n                        SPEAK: {\n                            target: 'speaking',\n                            actions: assign((_context, event) => { return { ttsAgenda: event.value } })\n                        }\n                    }\n                },\n                recognising: {\n                    initial: 'progress',\n                    entry: 'recStart',\n                    exit: 'recStop',\n                    on: {\n                        ASRRESULT: {\n                            actions: ['recLogResult',\n                                assign((_context, event) => { return { recResult: event.value } })],\n                            target: '.match'\n                        },\n                        RECOGNISED: 'idle',\n                        NEXT_STATE: {\n                            actions: assign((context) => {\n                                if (context.score) {return {score: context.score +1,}}\n                                else {return {score: counterScore +1}}\n                            }),\n                            target: 'idle'\n                        },\n                        TIMEOUT: {\n                            actions: assign((context) => {\n                                if (context.count) {return {count: context.count +1,}}\n                                else {return {count: counterTimeout +1,}}\n                            }),\n                            target: 'idle'\n                        }\n                    },\n                    states: {\n                        progress: {},\n                        match: {\n                            entry: send('RECOGNISED'),\n                        },\n                    }\n                },\n                speaking: {\n                    entry: 'ttsStart',\n                    on: {\n                        ENDSPEECH: 'idle',\n                    }\n                }\n            }\n        }\n    },\n},\n    {\n        actions: {\n            recLogResult: (context: SDSContext) => {\n                /* context.recResult = event.recResult; */\n                console.log('<< ASR: ' + context.recResult);\n            },\n            test: () => {\n                console.log('test')\n            },\n            logIntent: (context: SDSContext) => {\n                /* context.nluData = event.data */\n                console.log('<< NLU intent: ' + context.nluData.intent.name)\n            }\n        },\n    });\n\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n    state: State<SDSContext, any, any, any>;\n}\nconst ReactiveButton = (props: Props): JSX.Element => {\n    switch (true) {\n        case props.state.matches({ asrtts: 'recognising' }):\n            return (<div>                \n                <p>{props.state.context.recResult}</p>\n    \n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"glowing 20s linear\" }} \n\n                    {...props}>\n                    Listening...\n                </button>\n                </div>\n            );\n        case props.state.matches({ asrtts: 'speaking' }\n        ):\n            return (<div>\n                <p>{props.state.context.recResult}</p>\n                <button type=\"button\" className=\"glow-on-hover\"\n                    style={{ animation: \"bordering 1s infinite\" }} {...props}>\n                    Speaking...\n                </button></div>\n            );\n        default:\n            return (\n                <div>\n                <p>{props.state.context.recResult}</p>\n                <button type=\"button\" className=\"glow-on-hover\" {...props}>\n                    Click to start\n                </button >\n                </div>\n            );\n    }\n}\n\nfunction App() {\n    const { speak, cancel, speaking } = useSpeechSynthesis({\n        onEnd: () => {\n            send('ENDSPEECH');\n        },\n    });\n    const { listen, listening, stop } = useSpeechRecognition({\n        onResult: (result: any) => {\n            send({ type: \"ASRRESULT\", value: result });\n        },\n    });\n    const [current, send, service] = useMachine(machine, {\n        devTools: true,\n        actions: {\n            recStart: asEffect(() => {\n                console.log('Ready to receive a color command.');\n                listen({\n                    interimResults: false,\n                    continuous: true,\n                    language: 'sv-Se'\n                });\n            }),\n            recStop: asEffect(() => {\n                console.log('Recognition stopped.');\n                stop()\n            }),\n            ttsStart: asEffect((context, effect) => {\n                console.log('Speaking...');\n                speak({ text: context.ttsAgenda })\n            }),\n            ttsCancel: asEffect((context, effect) => {\n                console.log('TTS STOP...');\n                cancel()\n            })\n            /* speak: asEffect((context) => {\n\t     * console.log('Speaking...');\n             *     speak({text: context.ttsAgenda })\n             * } */\n        }\n    });\n\n    let shown_picture = Background;\n    if (current.context.picture) {shown_picture = current.context.picture}\n    \n    return (\n        <div className=\"App\">\n        <h1>\n        <   ReactiveButton state={current} onClick={() => send('CLICK')} />\n        </h1>\n        <h2>\n            <div><img src={shown_picture}/></div>\n        </h2>\n        </div>\n    )\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n    <App />,\n    rootElement);"],"sourceRoot":""}